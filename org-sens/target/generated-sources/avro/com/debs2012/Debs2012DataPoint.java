/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.debs2012;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
/** Avro Schema for Debs2012 original data */
@org.apache.avro.specific.AvroGenerated
public class Debs2012DataPoint extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 7418936630251488466L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Debs2012DataPoint\",\"namespace\":\"com.debs2012\",\"doc\":\"Avro Schema for Debs2012 original data\",\"fields\":[{\"name\":\"ts\",\"type\":\"long\",\"doc\":\"EPOCH millis Timestamp \",\"logicalType\":\"timestamp-millis\"},{\"name\":\"index\",\"type\":\"long\",\"doc\":\"message index\"},{\"name\":\"mf01\",\"type\":[\"null\",\"int\"],\"doc\":\"Electrical Power Main Phase 1\",\"default\":null},{\"name\":\"mf02\",\"type\":[\"null\",\"int\"],\"doc\":\"Electrical Power Main Phase 2\",\"default\":null},{\"name\":\"mf03\",\"type\":[\"null\",\"int\"],\"doc\":\"Electrical Power Main Phase 3\",\"default\":null},{\"name\":\"pc13\",\"type\":[\"null\",\"int\"],\"doc\":\"Anode Current Drop Detection Cell 1\",\"default\":null},{\"name\":\"pc14\",\"type\":[\"null\",\"int\"],\"doc\":\"Anode Current Drop Detection Cell 2\",\"default\":null},{\"name\":\"pc15\",\"type\":[\"null\",\"int\"],\"doc\":\"Anode Current Drop Detection Cell 3\",\"default\":null},{\"name\":\"pc25\",\"type\":[\"null\",\"int\"],\"doc\":\"Anode Voltage Drop Detection Cell 1\",\"default\":null},{\"name\":\"pc26\",\"type\":[\"null\",\"int\"],\"doc\":\"Anode Voltage Drop Detection Cell 2\",\"default\":null},{\"name\":\"pc27\",\"type\":[\"null\",\"int\"],\"doc\":\"Anode Voltage Drop Detection Cell 3\",\"default\":null},{\"name\":\"res\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"bm05\",\"type\":[\"null\",\"boolean\"],\"doc\":\"Chem A Additive Sense \",\"default\":null},{\"name\":\"bm06\",\"type\":[\"null\",\"boolean\"],\"doc\":\"Chem B Additive Sense \",\"default\":null},{\"name\":\"bm07\",\"type\":[\"null\",\"boolean\"],\"doc\":\"Chem C Additive Sense \",\"default\":null},{\"name\":\"bm08\",\"type\":[\"null\",\"boolean\"],\"doc\":\"Chem A Additive Release Valve VL26 \",\"default\":null},{\"name\":\"bm09\",\"type\":[\"null\",\"boolean\"],\"doc\":\"Chem B Additive Release Valve VL27 \",\"default\":null},{\"name\":\"bm10\",\"type\":[\"null\",\"boolean\"],\"doc\":\"Chem C Additive Release Valve VL28 \",\"default\":null},{\"name\":\"pp01\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"pp02\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"pp03\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"pp04\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"pp05\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"pp06\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"pp07\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"pp08\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"pp09\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"pp10\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"pp11\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"pp12\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"pp13\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"pp14\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"pp15\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"pp16\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"pp17\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"pp18\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"pp19\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"pp20\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"pp21\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"pp22\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"pp23\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"pp24\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"pp25\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"pp26\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"pp27\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"pp28\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"pp29\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"pp30\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"pp31\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"pp32\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"pp33\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"pp34\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"pp35\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"pp36\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"pc01\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"pc02\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"pc03\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"pc04\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"pc05\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"pc06\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"pc19\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"pc20\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"pc21\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"pc22\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"pc23\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"pc24\",\"type\":[\"null\",\"boolean\"],\"default\":null}],\"version\":\"1\"}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Debs2012DataPoint> ENCODER =
      new BinaryMessageEncoder<Debs2012DataPoint>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Debs2012DataPoint> DECODER =
      new BinaryMessageDecoder<Debs2012DataPoint>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<Debs2012DataPoint> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<Debs2012DataPoint> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Debs2012DataPoint>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this Debs2012DataPoint to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a Debs2012DataPoint from a ByteBuffer. */
  public static Debs2012DataPoint fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** EPOCH millis Timestamp  */
   private long ts;
  /** message index */
   private long index;
  /** Electrical Power Main Phase 1 */
   private java.lang.Integer mf01;
  /** Electrical Power Main Phase 2 */
   private java.lang.Integer mf02;
  /** Electrical Power Main Phase 3 */
   private java.lang.Integer mf03;
  /** Anode Current Drop Detection Cell 1 */
   private java.lang.Integer pc13;
  /** Anode Current Drop Detection Cell 2 */
   private java.lang.Integer pc14;
  /** Anode Current Drop Detection Cell 3 */
   private java.lang.Integer pc15;
  /** Anode Voltage Drop Detection Cell 1 */
   private java.lang.Integer pc25;
  /** Anode Voltage Drop Detection Cell 2 */
   private java.lang.Integer pc26;
  /** Anode Voltage Drop Detection Cell 3 */
   private java.lang.Integer pc27;
   private java.lang.Integer res;
  /** Chem A Additive Sense  */
   private java.lang.Boolean bm05;
  /** Chem B Additive Sense  */
   private java.lang.Boolean bm06;
  /** Chem C Additive Sense  */
   private java.lang.Boolean bm07;
  /** Chem A Additive Release Valve VL26  */
   private java.lang.Boolean bm08;
  /** Chem B Additive Release Valve VL27  */
   private java.lang.Boolean bm09;
  /** Chem C Additive Release Valve VL28  */
   private java.lang.Boolean bm10;
   private java.lang.Boolean pp01;
   private java.lang.Boolean pp02;
   private java.lang.Boolean pp03;
   private java.lang.Boolean pp04;
   private java.lang.Boolean pp05;
   private java.lang.Boolean pp06;
   private java.lang.Boolean pp07;
   private java.lang.Boolean pp08;
   private java.lang.Boolean pp09;
   private java.lang.Boolean pp10;
   private java.lang.Boolean pp11;
   private java.lang.Boolean pp12;
   private java.lang.Boolean pp13;
   private java.lang.Boolean pp14;
   private java.lang.Boolean pp15;
   private java.lang.Boolean pp16;
   private java.lang.Boolean pp17;
   private java.lang.Boolean pp18;
   private java.lang.Boolean pp19;
   private java.lang.Boolean pp20;
   private java.lang.Boolean pp21;
   private java.lang.Boolean pp22;
   private java.lang.Boolean pp23;
   private java.lang.Boolean pp24;
   private java.lang.Boolean pp25;
   private java.lang.Boolean pp26;
   private java.lang.Boolean pp27;
   private java.lang.Boolean pp28;
   private java.lang.Boolean pp29;
   private java.lang.Boolean pp30;
   private java.lang.Boolean pp31;
   private java.lang.Boolean pp32;
   private java.lang.Boolean pp33;
   private java.lang.Boolean pp34;
   private java.lang.Boolean pp35;
   private java.lang.Boolean pp36;
   private java.lang.Boolean pc01;
   private java.lang.Boolean pc02;
   private java.lang.Boolean pc03;
   private java.lang.Boolean pc04;
   private java.lang.Boolean pc05;
   private java.lang.Boolean pc06;
   private java.lang.Boolean pc19;
   private java.lang.Boolean pc20;
   private java.lang.Boolean pc21;
   private java.lang.Boolean pc22;
   private java.lang.Boolean pc23;
   private java.lang.Boolean pc24;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Debs2012DataPoint() {}

  /**
   * All-args constructor.
   * @param ts EPOCH millis Timestamp 
   * @param index message index
   * @param mf01 Electrical Power Main Phase 1
   * @param mf02 Electrical Power Main Phase 2
   * @param mf03 Electrical Power Main Phase 3
   * @param pc13 Anode Current Drop Detection Cell 1
   * @param pc14 Anode Current Drop Detection Cell 2
   * @param pc15 Anode Current Drop Detection Cell 3
   * @param pc25 Anode Voltage Drop Detection Cell 1
   * @param pc26 Anode Voltage Drop Detection Cell 2
   * @param pc27 Anode Voltage Drop Detection Cell 3
   * @param res The new value for res
   * @param bm05 Chem A Additive Sense 
   * @param bm06 Chem B Additive Sense 
   * @param bm07 Chem C Additive Sense 
   * @param bm08 Chem A Additive Release Valve VL26 
   * @param bm09 Chem B Additive Release Valve VL27 
   * @param bm10 Chem C Additive Release Valve VL28 
   * @param pp01 The new value for pp01
   * @param pp02 The new value for pp02
   * @param pp03 The new value for pp03
   * @param pp04 The new value for pp04
   * @param pp05 The new value for pp05
   * @param pp06 The new value for pp06
   * @param pp07 The new value for pp07
   * @param pp08 The new value for pp08
   * @param pp09 The new value for pp09
   * @param pp10 The new value for pp10
   * @param pp11 The new value for pp11
   * @param pp12 The new value for pp12
   * @param pp13 The new value for pp13
   * @param pp14 The new value for pp14
   * @param pp15 The new value for pp15
   * @param pp16 The new value for pp16
   * @param pp17 The new value for pp17
   * @param pp18 The new value for pp18
   * @param pp19 The new value for pp19
   * @param pp20 The new value for pp20
   * @param pp21 The new value for pp21
   * @param pp22 The new value for pp22
   * @param pp23 The new value for pp23
   * @param pp24 The new value for pp24
   * @param pp25 The new value for pp25
   * @param pp26 The new value for pp26
   * @param pp27 The new value for pp27
   * @param pp28 The new value for pp28
   * @param pp29 The new value for pp29
   * @param pp30 The new value for pp30
   * @param pp31 The new value for pp31
   * @param pp32 The new value for pp32
   * @param pp33 The new value for pp33
   * @param pp34 The new value for pp34
   * @param pp35 The new value for pp35
   * @param pp36 The new value for pp36
   * @param pc01 The new value for pc01
   * @param pc02 The new value for pc02
   * @param pc03 The new value for pc03
   * @param pc04 The new value for pc04
   * @param pc05 The new value for pc05
   * @param pc06 The new value for pc06
   * @param pc19 The new value for pc19
   * @param pc20 The new value for pc20
   * @param pc21 The new value for pc21
   * @param pc22 The new value for pc22
   * @param pc23 The new value for pc23
   * @param pc24 The new value for pc24
   */
  public Debs2012DataPoint(java.lang.Long ts, java.lang.Long index, java.lang.Integer mf01, java.lang.Integer mf02, java.lang.Integer mf03, java.lang.Integer pc13, java.lang.Integer pc14, java.lang.Integer pc15, java.lang.Integer pc25, java.lang.Integer pc26, java.lang.Integer pc27, java.lang.Integer res, java.lang.Boolean bm05, java.lang.Boolean bm06, java.lang.Boolean bm07, java.lang.Boolean bm08, java.lang.Boolean bm09, java.lang.Boolean bm10, java.lang.Boolean pp01, java.lang.Boolean pp02, java.lang.Boolean pp03, java.lang.Boolean pp04, java.lang.Boolean pp05, java.lang.Boolean pp06, java.lang.Boolean pp07, java.lang.Boolean pp08, java.lang.Boolean pp09, java.lang.Boolean pp10, java.lang.Boolean pp11, java.lang.Boolean pp12, java.lang.Boolean pp13, java.lang.Boolean pp14, java.lang.Boolean pp15, java.lang.Boolean pp16, java.lang.Boolean pp17, java.lang.Boolean pp18, java.lang.Boolean pp19, java.lang.Boolean pp20, java.lang.Boolean pp21, java.lang.Boolean pp22, java.lang.Boolean pp23, java.lang.Boolean pp24, java.lang.Boolean pp25, java.lang.Boolean pp26, java.lang.Boolean pp27, java.lang.Boolean pp28, java.lang.Boolean pp29, java.lang.Boolean pp30, java.lang.Boolean pp31, java.lang.Boolean pp32, java.lang.Boolean pp33, java.lang.Boolean pp34, java.lang.Boolean pp35, java.lang.Boolean pp36, java.lang.Boolean pc01, java.lang.Boolean pc02, java.lang.Boolean pc03, java.lang.Boolean pc04, java.lang.Boolean pc05, java.lang.Boolean pc06, java.lang.Boolean pc19, java.lang.Boolean pc20, java.lang.Boolean pc21, java.lang.Boolean pc22, java.lang.Boolean pc23, java.lang.Boolean pc24) {
    this.ts = ts;
    this.index = index;
    this.mf01 = mf01;
    this.mf02 = mf02;
    this.mf03 = mf03;
    this.pc13 = pc13;
    this.pc14 = pc14;
    this.pc15 = pc15;
    this.pc25 = pc25;
    this.pc26 = pc26;
    this.pc27 = pc27;
    this.res = res;
    this.bm05 = bm05;
    this.bm06 = bm06;
    this.bm07 = bm07;
    this.bm08 = bm08;
    this.bm09 = bm09;
    this.bm10 = bm10;
    this.pp01 = pp01;
    this.pp02 = pp02;
    this.pp03 = pp03;
    this.pp04 = pp04;
    this.pp05 = pp05;
    this.pp06 = pp06;
    this.pp07 = pp07;
    this.pp08 = pp08;
    this.pp09 = pp09;
    this.pp10 = pp10;
    this.pp11 = pp11;
    this.pp12 = pp12;
    this.pp13 = pp13;
    this.pp14 = pp14;
    this.pp15 = pp15;
    this.pp16 = pp16;
    this.pp17 = pp17;
    this.pp18 = pp18;
    this.pp19 = pp19;
    this.pp20 = pp20;
    this.pp21 = pp21;
    this.pp22 = pp22;
    this.pp23 = pp23;
    this.pp24 = pp24;
    this.pp25 = pp25;
    this.pp26 = pp26;
    this.pp27 = pp27;
    this.pp28 = pp28;
    this.pp29 = pp29;
    this.pp30 = pp30;
    this.pp31 = pp31;
    this.pp32 = pp32;
    this.pp33 = pp33;
    this.pp34 = pp34;
    this.pp35 = pp35;
    this.pp36 = pp36;
    this.pc01 = pc01;
    this.pc02 = pc02;
    this.pc03 = pc03;
    this.pc04 = pc04;
    this.pc05 = pc05;
    this.pc06 = pc06;
    this.pc19 = pc19;
    this.pc20 = pc20;
    this.pc21 = pc21;
    this.pc22 = pc22;
    this.pc23 = pc23;
    this.pc24 = pc24;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return ts;
    case 1: return index;
    case 2: return mf01;
    case 3: return mf02;
    case 4: return mf03;
    case 5: return pc13;
    case 6: return pc14;
    case 7: return pc15;
    case 8: return pc25;
    case 9: return pc26;
    case 10: return pc27;
    case 11: return res;
    case 12: return bm05;
    case 13: return bm06;
    case 14: return bm07;
    case 15: return bm08;
    case 16: return bm09;
    case 17: return bm10;
    case 18: return pp01;
    case 19: return pp02;
    case 20: return pp03;
    case 21: return pp04;
    case 22: return pp05;
    case 23: return pp06;
    case 24: return pp07;
    case 25: return pp08;
    case 26: return pp09;
    case 27: return pp10;
    case 28: return pp11;
    case 29: return pp12;
    case 30: return pp13;
    case 31: return pp14;
    case 32: return pp15;
    case 33: return pp16;
    case 34: return pp17;
    case 35: return pp18;
    case 36: return pp19;
    case 37: return pp20;
    case 38: return pp21;
    case 39: return pp22;
    case 40: return pp23;
    case 41: return pp24;
    case 42: return pp25;
    case 43: return pp26;
    case 44: return pp27;
    case 45: return pp28;
    case 46: return pp29;
    case 47: return pp30;
    case 48: return pp31;
    case 49: return pp32;
    case 50: return pp33;
    case 51: return pp34;
    case 52: return pp35;
    case 53: return pp36;
    case 54: return pc01;
    case 55: return pc02;
    case 56: return pc03;
    case 57: return pc04;
    case 58: return pc05;
    case 59: return pc06;
    case 60: return pc19;
    case 61: return pc20;
    case 62: return pc21;
    case 63: return pc22;
    case 64: return pc23;
    case 65: return pc24;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: ts = (java.lang.Long)value$; break;
    case 1: index = (java.lang.Long)value$; break;
    case 2: mf01 = (java.lang.Integer)value$; break;
    case 3: mf02 = (java.lang.Integer)value$; break;
    case 4: mf03 = (java.lang.Integer)value$; break;
    case 5: pc13 = (java.lang.Integer)value$; break;
    case 6: pc14 = (java.lang.Integer)value$; break;
    case 7: pc15 = (java.lang.Integer)value$; break;
    case 8: pc25 = (java.lang.Integer)value$; break;
    case 9: pc26 = (java.lang.Integer)value$; break;
    case 10: pc27 = (java.lang.Integer)value$; break;
    case 11: res = (java.lang.Integer)value$; break;
    case 12: bm05 = (java.lang.Boolean)value$; break;
    case 13: bm06 = (java.lang.Boolean)value$; break;
    case 14: bm07 = (java.lang.Boolean)value$; break;
    case 15: bm08 = (java.lang.Boolean)value$; break;
    case 16: bm09 = (java.lang.Boolean)value$; break;
    case 17: bm10 = (java.lang.Boolean)value$; break;
    case 18: pp01 = (java.lang.Boolean)value$; break;
    case 19: pp02 = (java.lang.Boolean)value$; break;
    case 20: pp03 = (java.lang.Boolean)value$; break;
    case 21: pp04 = (java.lang.Boolean)value$; break;
    case 22: pp05 = (java.lang.Boolean)value$; break;
    case 23: pp06 = (java.lang.Boolean)value$; break;
    case 24: pp07 = (java.lang.Boolean)value$; break;
    case 25: pp08 = (java.lang.Boolean)value$; break;
    case 26: pp09 = (java.lang.Boolean)value$; break;
    case 27: pp10 = (java.lang.Boolean)value$; break;
    case 28: pp11 = (java.lang.Boolean)value$; break;
    case 29: pp12 = (java.lang.Boolean)value$; break;
    case 30: pp13 = (java.lang.Boolean)value$; break;
    case 31: pp14 = (java.lang.Boolean)value$; break;
    case 32: pp15 = (java.lang.Boolean)value$; break;
    case 33: pp16 = (java.lang.Boolean)value$; break;
    case 34: pp17 = (java.lang.Boolean)value$; break;
    case 35: pp18 = (java.lang.Boolean)value$; break;
    case 36: pp19 = (java.lang.Boolean)value$; break;
    case 37: pp20 = (java.lang.Boolean)value$; break;
    case 38: pp21 = (java.lang.Boolean)value$; break;
    case 39: pp22 = (java.lang.Boolean)value$; break;
    case 40: pp23 = (java.lang.Boolean)value$; break;
    case 41: pp24 = (java.lang.Boolean)value$; break;
    case 42: pp25 = (java.lang.Boolean)value$; break;
    case 43: pp26 = (java.lang.Boolean)value$; break;
    case 44: pp27 = (java.lang.Boolean)value$; break;
    case 45: pp28 = (java.lang.Boolean)value$; break;
    case 46: pp29 = (java.lang.Boolean)value$; break;
    case 47: pp30 = (java.lang.Boolean)value$; break;
    case 48: pp31 = (java.lang.Boolean)value$; break;
    case 49: pp32 = (java.lang.Boolean)value$; break;
    case 50: pp33 = (java.lang.Boolean)value$; break;
    case 51: pp34 = (java.lang.Boolean)value$; break;
    case 52: pp35 = (java.lang.Boolean)value$; break;
    case 53: pp36 = (java.lang.Boolean)value$; break;
    case 54: pc01 = (java.lang.Boolean)value$; break;
    case 55: pc02 = (java.lang.Boolean)value$; break;
    case 56: pc03 = (java.lang.Boolean)value$; break;
    case 57: pc04 = (java.lang.Boolean)value$; break;
    case 58: pc05 = (java.lang.Boolean)value$; break;
    case 59: pc06 = (java.lang.Boolean)value$; break;
    case 60: pc19 = (java.lang.Boolean)value$; break;
    case 61: pc20 = (java.lang.Boolean)value$; break;
    case 62: pc21 = (java.lang.Boolean)value$; break;
    case 63: pc22 = (java.lang.Boolean)value$; break;
    case 64: pc23 = (java.lang.Boolean)value$; break;
    case 65: pc24 = (java.lang.Boolean)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'ts' field.
   * @return EPOCH millis Timestamp 
   */
  public java.lang.Long getTs() {
    return ts;
  }


  /**
   * Gets the value of the 'index' field.
   * @return message index
   */
  public java.lang.Long getIndex() {
    return index;
  }


  /**
   * Gets the value of the 'mf01' field.
   * @return Electrical Power Main Phase 1
   */
  public java.lang.Integer getMf01() {
    return mf01;
  }


  /**
   * Gets the value of the 'mf02' field.
   * @return Electrical Power Main Phase 2
   */
  public java.lang.Integer getMf02() {
    return mf02;
  }


  /**
   * Gets the value of the 'mf03' field.
   * @return Electrical Power Main Phase 3
   */
  public java.lang.Integer getMf03() {
    return mf03;
  }


  /**
   * Gets the value of the 'pc13' field.
   * @return Anode Current Drop Detection Cell 1
   */
  public java.lang.Integer getPc13() {
    return pc13;
  }


  /**
   * Gets the value of the 'pc14' field.
   * @return Anode Current Drop Detection Cell 2
   */
  public java.lang.Integer getPc14() {
    return pc14;
  }


  /**
   * Gets the value of the 'pc15' field.
   * @return Anode Current Drop Detection Cell 3
   */
  public java.lang.Integer getPc15() {
    return pc15;
  }


  /**
   * Gets the value of the 'pc25' field.
   * @return Anode Voltage Drop Detection Cell 1
   */
  public java.lang.Integer getPc25() {
    return pc25;
  }


  /**
   * Gets the value of the 'pc26' field.
   * @return Anode Voltage Drop Detection Cell 2
   */
  public java.lang.Integer getPc26() {
    return pc26;
  }


  /**
   * Gets the value of the 'pc27' field.
   * @return Anode Voltage Drop Detection Cell 3
   */
  public java.lang.Integer getPc27() {
    return pc27;
  }


  /**
   * Gets the value of the 'res' field.
   * @return The value of the 'res' field.
   */
  public java.lang.Integer getRes() {
    return res;
  }


  /**
   * Gets the value of the 'bm05' field.
   * @return Chem A Additive Sense 
   */
  public java.lang.Boolean getBm05() {
    return bm05;
  }


  /**
   * Gets the value of the 'bm06' field.
   * @return Chem B Additive Sense 
   */
  public java.lang.Boolean getBm06() {
    return bm06;
  }


  /**
   * Gets the value of the 'bm07' field.
   * @return Chem C Additive Sense 
   */
  public java.lang.Boolean getBm07() {
    return bm07;
  }


  /**
   * Gets the value of the 'bm08' field.
   * @return Chem A Additive Release Valve VL26 
   */
  public java.lang.Boolean getBm08() {
    return bm08;
  }


  /**
   * Gets the value of the 'bm09' field.
   * @return Chem B Additive Release Valve VL27 
   */
  public java.lang.Boolean getBm09() {
    return bm09;
  }


  /**
   * Gets the value of the 'bm10' field.
   * @return Chem C Additive Release Valve VL28 
   */
  public java.lang.Boolean getBm10() {
    return bm10;
  }


  /**
   * Gets the value of the 'pp01' field.
   * @return The value of the 'pp01' field.
   */
  public java.lang.Boolean getPp01() {
    return pp01;
  }


  /**
   * Gets the value of the 'pp02' field.
   * @return The value of the 'pp02' field.
   */
  public java.lang.Boolean getPp02() {
    return pp02;
  }


  /**
   * Gets the value of the 'pp03' field.
   * @return The value of the 'pp03' field.
   */
  public java.lang.Boolean getPp03() {
    return pp03;
  }


  /**
   * Gets the value of the 'pp04' field.
   * @return The value of the 'pp04' field.
   */
  public java.lang.Boolean getPp04() {
    return pp04;
  }


  /**
   * Gets the value of the 'pp05' field.
   * @return The value of the 'pp05' field.
   */
  public java.lang.Boolean getPp05() {
    return pp05;
  }


  /**
   * Gets the value of the 'pp06' field.
   * @return The value of the 'pp06' field.
   */
  public java.lang.Boolean getPp06() {
    return pp06;
  }


  /**
   * Gets the value of the 'pp07' field.
   * @return The value of the 'pp07' field.
   */
  public java.lang.Boolean getPp07() {
    return pp07;
  }


  /**
   * Gets the value of the 'pp08' field.
   * @return The value of the 'pp08' field.
   */
  public java.lang.Boolean getPp08() {
    return pp08;
  }


  /**
   * Gets the value of the 'pp09' field.
   * @return The value of the 'pp09' field.
   */
  public java.lang.Boolean getPp09() {
    return pp09;
  }


  /**
   * Gets the value of the 'pp10' field.
   * @return The value of the 'pp10' field.
   */
  public java.lang.Boolean getPp10() {
    return pp10;
  }


  /**
   * Gets the value of the 'pp11' field.
   * @return The value of the 'pp11' field.
   */
  public java.lang.Boolean getPp11() {
    return pp11;
  }


  /**
   * Gets the value of the 'pp12' field.
   * @return The value of the 'pp12' field.
   */
  public java.lang.Boolean getPp12() {
    return pp12;
  }


  /**
   * Gets the value of the 'pp13' field.
   * @return The value of the 'pp13' field.
   */
  public java.lang.Boolean getPp13() {
    return pp13;
  }


  /**
   * Gets the value of the 'pp14' field.
   * @return The value of the 'pp14' field.
   */
  public java.lang.Boolean getPp14() {
    return pp14;
  }


  /**
   * Gets the value of the 'pp15' field.
   * @return The value of the 'pp15' field.
   */
  public java.lang.Boolean getPp15() {
    return pp15;
  }


  /**
   * Gets the value of the 'pp16' field.
   * @return The value of the 'pp16' field.
   */
  public java.lang.Boolean getPp16() {
    return pp16;
  }


  /**
   * Gets the value of the 'pp17' field.
   * @return The value of the 'pp17' field.
   */
  public java.lang.Boolean getPp17() {
    return pp17;
  }


  /**
   * Gets the value of the 'pp18' field.
   * @return The value of the 'pp18' field.
   */
  public java.lang.Boolean getPp18() {
    return pp18;
  }


  /**
   * Gets the value of the 'pp19' field.
   * @return The value of the 'pp19' field.
   */
  public java.lang.Boolean getPp19() {
    return pp19;
  }


  /**
   * Gets the value of the 'pp20' field.
   * @return The value of the 'pp20' field.
   */
  public java.lang.Boolean getPp20() {
    return pp20;
  }


  /**
   * Gets the value of the 'pp21' field.
   * @return The value of the 'pp21' field.
   */
  public java.lang.Boolean getPp21() {
    return pp21;
  }


  /**
   * Gets the value of the 'pp22' field.
   * @return The value of the 'pp22' field.
   */
  public java.lang.Boolean getPp22() {
    return pp22;
  }


  /**
   * Gets the value of the 'pp23' field.
   * @return The value of the 'pp23' field.
   */
  public java.lang.Boolean getPp23() {
    return pp23;
  }


  /**
   * Gets the value of the 'pp24' field.
   * @return The value of the 'pp24' field.
   */
  public java.lang.Boolean getPp24() {
    return pp24;
  }


  /**
   * Gets the value of the 'pp25' field.
   * @return The value of the 'pp25' field.
   */
  public java.lang.Boolean getPp25() {
    return pp25;
  }


  /**
   * Gets the value of the 'pp26' field.
   * @return The value of the 'pp26' field.
   */
  public java.lang.Boolean getPp26() {
    return pp26;
  }


  /**
   * Gets the value of the 'pp27' field.
   * @return The value of the 'pp27' field.
   */
  public java.lang.Boolean getPp27() {
    return pp27;
  }


  /**
   * Gets the value of the 'pp28' field.
   * @return The value of the 'pp28' field.
   */
  public java.lang.Boolean getPp28() {
    return pp28;
  }


  /**
   * Gets the value of the 'pp29' field.
   * @return The value of the 'pp29' field.
   */
  public java.lang.Boolean getPp29() {
    return pp29;
  }


  /**
   * Gets the value of the 'pp30' field.
   * @return The value of the 'pp30' field.
   */
  public java.lang.Boolean getPp30() {
    return pp30;
  }


  /**
   * Gets the value of the 'pp31' field.
   * @return The value of the 'pp31' field.
   */
  public java.lang.Boolean getPp31() {
    return pp31;
  }


  /**
   * Gets the value of the 'pp32' field.
   * @return The value of the 'pp32' field.
   */
  public java.lang.Boolean getPp32() {
    return pp32;
  }


  /**
   * Gets the value of the 'pp33' field.
   * @return The value of the 'pp33' field.
   */
  public java.lang.Boolean getPp33() {
    return pp33;
  }


  /**
   * Gets the value of the 'pp34' field.
   * @return The value of the 'pp34' field.
   */
  public java.lang.Boolean getPp34() {
    return pp34;
  }


  /**
   * Gets the value of the 'pp35' field.
   * @return The value of the 'pp35' field.
   */
  public java.lang.Boolean getPp35() {
    return pp35;
  }


  /**
   * Gets the value of the 'pp36' field.
   * @return The value of the 'pp36' field.
   */
  public java.lang.Boolean getPp36() {
    return pp36;
  }


  /**
   * Gets the value of the 'pc01' field.
   * @return The value of the 'pc01' field.
   */
  public java.lang.Boolean getPc01() {
    return pc01;
  }


  /**
   * Gets the value of the 'pc02' field.
   * @return The value of the 'pc02' field.
   */
  public java.lang.Boolean getPc02() {
    return pc02;
  }


  /**
   * Gets the value of the 'pc03' field.
   * @return The value of the 'pc03' field.
   */
  public java.lang.Boolean getPc03() {
    return pc03;
  }


  /**
   * Gets the value of the 'pc04' field.
   * @return The value of the 'pc04' field.
   */
  public java.lang.Boolean getPc04() {
    return pc04;
  }


  /**
   * Gets the value of the 'pc05' field.
   * @return The value of the 'pc05' field.
   */
  public java.lang.Boolean getPc05() {
    return pc05;
  }


  /**
   * Gets the value of the 'pc06' field.
   * @return The value of the 'pc06' field.
   */
  public java.lang.Boolean getPc06() {
    return pc06;
  }


  /**
   * Gets the value of the 'pc19' field.
   * @return The value of the 'pc19' field.
   */
  public java.lang.Boolean getPc19() {
    return pc19;
  }


  /**
   * Gets the value of the 'pc20' field.
   * @return The value of the 'pc20' field.
   */
  public java.lang.Boolean getPc20() {
    return pc20;
  }


  /**
   * Gets the value of the 'pc21' field.
   * @return The value of the 'pc21' field.
   */
  public java.lang.Boolean getPc21() {
    return pc21;
  }


  /**
   * Gets the value of the 'pc22' field.
   * @return The value of the 'pc22' field.
   */
  public java.lang.Boolean getPc22() {
    return pc22;
  }


  /**
   * Gets the value of the 'pc23' field.
   * @return The value of the 'pc23' field.
   */
  public java.lang.Boolean getPc23() {
    return pc23;
  }


  /**
   * Gets the value of the 'pc24' field.
   * @return The value of the 'pc24' field.
   */
  public java.lang.Boolean getPc24() {
    return pc24;
  }


  /**
   * Creates a new Debs2012DataPoint RecordBuilder.
   * @return A new Debs2012DataPoint RecordBuilder
   */
  public static com.debs2012.Debs2012DataPoint.Builder newBuilder() {
    return new com.debs2012.Debs2012DataPoint.Builder();
  }

  /**
   * Creates a new Debs2012DataPoint RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Debs2012DataPoint RecordBuilder
   */
  public static com.debs2012.Debs2012DataPoint.Builder newBuilder(com.debs2012.Debs2012DataPoint.Builder other) {
    return new com.debs2012.Debs2012DataPoint.Builder(other);
  }

  /**
   * Creates a new Debs2012DataPoint RecordBuilder by copying an existing Debs2012DataPoint instance.
   * @param other The existing instance to copy.
   * @return A new Debs2012DataPoint RecordBuilder
   */
  public static com.debs2012.Debs2012DataPoint.Builder newBuilder(com.debs2012.Debs2012DataPoint other) {
    return new com.debs2012.Debs2012DataPoint.Builder(other);
  }

  /**
   * RecordBuilder for Debs2012DataPoint instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Debs2012DataPoint>
    implements org.apache.avro.data.RecordBuilder<Debs2012DataPoint> {

    /** EPOCH millis Timestamp  */
    private long ts;
    /** message index */
    private long index;
    /** Electrical Power Main Phase 1 */
    private java.lang.Integer mf01;
    /** Electrical Power Main Phase 2 */
    private java.lang.Integer mf02;
    /** Electrical Power Main Phase 3 */
    private java.lang.Integer mf03;
    /** Anode Current Drop Detection Cell 1 */
    private java.lang.Integer pc13;
    /** Anode Current Drop Detection Cell 2 */
    private java.lang.Integer pc14;
    /** Anode Current Drop Detection Cell 3 */
    private java.lang.Integer pc15;
    /** Anode Voltage Drop Detection Cell 1 */
    private java.lang.Integer pc25;
    /** Anode Voltage Drop Detection Cell 2 */
    private java.lang.Integer pc26;
    /** Anode Voltage Drop Detection Cell 3 */
    private java.lang.Integer pc27;
    private java.lang.Integer res;
    /** Chem A Additive Sense  */
    private java.lang.Boolean bm05;
    /** Chem B Additive Sense  */
    private java.lang.Boolean bm06;
    /** Chem C Additive Sense  */
    private java.lang.Boolean bm07;
    /** Chem A Additive Release Valve VL26  */
    private java.lang.Boolean bm08;
    /** Chem B Additive Release Valve VL27  */
    private java.lang.Boolean bm09;
    /** Chem C Additive Release Valve VL28  */
    private java.lang.Boolean bm10;
    private java.lang.Boolean pp01;
    private java.lang.Boolean pp02;
    private java.lang.Boolean pp03;
    private java.lang.Boolean pp04;
    private java.lang.Boolean pp05;
    private java.lang.Boolean pp06;
    private java.lang.Boolean pp07;
    private java.lang.Boolean pp08;
    private java.lang.Boolean pp09;
    private java.lang.Boolean pp10;
    private java.lang.Boolean pp11;
    private java.lang.Boolean pp12;
    private java.lang.Boolean pp13;
    private java.lang.Boolean pp14;
    private java.lang.Boolean pp15;
    private java.lang.Boolean pp16;
    private java.lang.Boolean pp17;
    private java.lang.Boolean pp18;
    private java.lang.Boolean pp19;
    private java.lang.Boolean pp20;
    private java.lang.Boolean pp21;
    private java.lang.Boolean pp22;
    private java.lang.Boolean pp23;
    private java.lang.Boolean pp24;
    private java.lang.Boolean pp25;
    private java.lang.Boolean pp26;
    private java.lang.Boolean pp27;
    private java.lang.Boolean pp28;
    private java.lang.Boolean pp29;
    private java.lang.Boolean pp30;
    private java.lang.Boolean pp31;
    private java.lang.Boolean pp32;
    private java.lang.Boolean pp33;
    private java.lang.Boolean pp34;
    private java.lang.Boolean pp35;
    private java.lang.Boolean pp36;
    private java.lang.Boolean pc01;
    private java.lang.Boolean pc02;
    private java.lang.Boolean pc03;
    private java.lang.Boolean pc04;
    private java.lang.Boolean pc05;
    private java.lang.Boolean pc06;
    private java.lang.Boolean pc19;
    private java.lang.Boolean pc20;
    private java.lang.Boolean pc21;
    private java.lang.Boolean pc22;
    private java.lang.Boolean pc23;
    private java.lang.Boolean pc24;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.debs2012.Debs2012DataPoint.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.ts)) {
        this.ts = data().deepCopy(fields()[0].schema(), other.ts);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.index)) {
        this.index = data().deepCopy(fields()[1].schema(), other.index);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.mf01)) {
        this.mf01 = data().deepCopy(fields()[2].schema(), other.mf01);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.mf02)) {
        this.mf02 = data().deepCopy(fields()[3].schema(), other.mf02);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.mf03)) {
        this.mf03 = data().deepCopy(fields()[4].schema(), other.mf03);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.pc13)) {
        this.pc13 = data().deepCopy(fields()[5].schema(), other.pc13);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.pc14)) {
        this.pc14 = data().deepCopy(fields()[6].schema(), other.pc14);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.pc15)) {
        this.pc15 = data().deepCopy(fields()[7].schema(), other.pc15);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.pc25)) {
        this.pc25 = data().deepCopy(fields()[8].schema(), other.pc25);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.pc26)) {
        this.pc26 = data().deepCopy(fields()[9].schema(), other.pc26);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.pc27)) {
        this.pc27 = data().deepCopy(fields()[10].schema(), other.pc27);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.res)) {
        this.res = data().deepCopy(fields()[11].schema(), other.res);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.bm05)) {
        this.bm05 = data().deepCopy(fields()[12].schema(), other.bm05);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.bm06)) {
        this.bm06 = data().deepCopy(fields()[13].schema(), other.bm06);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.bm07)) {
        this.bm07 = data().deepCopy(fields()[14].schema(), other.bm07);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.bm08)) {
        this.bm08 = data().deepCopy(fields()[15].schema(), other.bm08);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.bm09)) {
        this.bm09 = data().deepCopy(fields()[16].schema(), other.bm09);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.bm10)) {
        this.bm10 = data().deepCopy(fields()[17].schema(), other.bm10);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.pp01)) {
        this.pp01 = data().deepCopy(fields()[18].schema(), other.pp01);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.pp02)) {
        this.pp02 = data().deepCopy(fields()[19].schema(), other.pp02);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.pp03)) {
        this.pp03 = data().deepCopy(fields()[20].schema(), other.pp03);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.pp04)) {
        this.pp04 = data().deepCopy(fields()[21].schema(), other.pp04);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.pp05)) {
        this.pp05 = data().deepCopy(fields()[22].schema(), other.pp05);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.pp06)) {
        this.pp06 = data().deepCopy(fields()[23].schema(), other.pp06);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.pp07)) {
        this.pp07 = data().deepCopy(fields()[24].schema(), other.pp07);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.pp08)) {
        this.pp08 = data().deepCopy(fields()[25].schema(), other.pp08);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.pp09)) {
        this.pp09 = data().deepCopy(fields()[26].schema(), other.pp09);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.pp10)) {
        this.pp10 = data().deepCopy(fields()[27].schema(), other.pp10);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.pp11)) {
        this.pp11 = data().deepCopy(fields()[28].schema(), other.pp11);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.pp12)) {
        this.pp12 = data().deepCopy(fields()[29].schema(), other.pp12);
        fieldSetFlags()[29] = true;
      }
      if (isValidValue(fields()[30], other.pp13)) {
        this.pp13 = data().deepCopy(fields()[30].schema(), other.pp13);
        fieldSetFlags()[30] = true;
      }
      if (isValidValue(fields()[31], other.pp14)) {
        this.pp14 = data().deepCopy(fields()[31].schema(), other.pp14);
        fieldSetFlags()[31] = true;
      }
      if (isValidValue(fields()[32], other.pp15)) {
        this.pp15 = data().deepCopy(fields()[32].schema(), other.pp15);
        fieldSetFlags()[32] = true;
      }
      if (isValidValue(fields()[33], other.pp16)) {
        this.pp16 = data().deepCopy(fields()[33].schema(), other.pp16);
        fieldSetFlags()[33] = true;
      }
      if (isValidValue(fields()[34], other.pp17)) {
        this.pp17 = data().deepCopy(fields()[34].schema(), other.pp17);
        fieldSetFlags()[34] = true;
      }
      if (isValidValue(fields()[35], other.pp18)) {
        this.pp18 = data().deepCopy(fields()[35].schema(), other.pp18);
        fieldSetFlags()[35] = true;
      }
      if (isValidValue(fields()[36], other.pp19)) {
        this.pp19 = data().deepCopy(fields()[36].schema(), other.pp19);
        fieldSetFlags()[36] = true;
      }
      if (isValidValue(fields()[37], other.pp20)) {
        this.pp20 = data().deepCopy(fields()[37].schema(), other.pp20);
        fieldSetFlags()[37] = true;
      }
      if (isValidValue(fields()[38], other.pp21)) {
        this.pp21 = data().deepCopy(fields()[38].schema(), other.pp21);
        fieldSetFlags()[38] = true;
      }
      if (isValidValue(fields()[39], other.pp22)) {
        this.pp22 = data().deepCopy(fields()[39].schema(), other.pp22);
        fieldSetFlags()[39] = true;
      }
      if (isValidValue(fields()[40], other.pp23)) {
        this.pp23 = data().deepCopy(fields()[40].schema(), other.pp23);
        fieldSetFlags()[40] = true;
      }
      if (isValidValue(fields()[41], other.pp24)) {
        this.pp24 = data().deepCopy(fields()[41].schema(), other.pp24);
        fieldSetFlags()[41] = true;
      }
      if (isValidValue(fields()[42], other.pp25)) {
        this.pp25 = data().deepCopy(fields()[42].schema(), other.pp25);
        fieldSetFlags()[42] = true;
      }
      if (isValidValue(fields()[43], other.pp26)) {
        this.pp26 = data().deepCopy(fields()[43].schema(), other.pp26);
        fieldSetFlags()[43] = true;
      }
      if (isValidValue(fields()[44], other.pp27)) {
        this.pp27 = data().deepCopy(fields()[44].schema(), other.pp27);
        fieldSetFlags()[44] = true;
      }
      if (isValidValue(fields()[45], other.pp28)) {
        this.pp28 = data().deepCopy(fields()[45].schema(), other.pp28);
        fieldSetFlags()[45] = true;
      }
      if (isValidValue(fields()[46], other.pp29)) {
        this.pp29 = data().deepCopy(fields()[46].schema(), other.pp29);
        fieldSetFlags()[46] = true;
      }
      if (isValidValue(fields()[47], other.pp30)) {
        this.pp30 = data().deepCopy(fields()[47].schema(), other.pp30);
        fieldSetFlags()[47] = true;
      }
      if (isValidValue(fields()[48], other.pp31)) {
        this.pp31 = data().deepCopy(fields()[48].schema(), other.pp31);
        fieldSetFlags()[48] = true;
      }
      if (isValidValue(fields()[49], other.pp32)) {
        this.pp32 = data().deepCopy(fields()[49].schema(), other.pp32);
        fieldSetFlags()[49] = true;
      }
      if (isValidValue(fields()[50], other.pp33)) {
        this.pp33 = data().deepCopy(fields()[50].schema(), other.pp33);
        fieldSetFlags()[50] = true;
      }
      if (isValidValue(fields()[51], other.pp34)) {
        this.pp34 = data().deepCopy(fields()[51].schema(), other.pp34);
        fieldSetFlags()[51] = true;
      }
      if (isValidValue(fields()[52], other.pp35)) {
        this.pp35 = data().deepCopy(fields()[52].schema(), other.pp35);
        fieldSetFlags()[52] = true;
      }
      if (isValidValue(fields()[53], other.pp36)) {
        this.pp36 = data().deepCopy(fields()[53].schema(), other.pp36);
        fieldSetFlags()[53] = true;
      }
      if (isValidValue(fields()[54], other.pc01)) {
        this.pc01 = data().deepCopy(fields()[54].schema(), other.pc01);
        fieldSetFlags()[54] = true;
      }
      if (isValidValue(fields()[55], other.pc02)) {
        this.pc02 = data().deepCopy(fields()[55].schema(), other.pc02);
        fieldSetFlags()[55] = true;
      }
      if (isValidValue(fields()[56], other.pc03)) {
        this.pc03 = data().deepCopy(fields()[56].schema(), other.pc03);
        fieldSetFlags()[56] = true;
      }
      if (isValidValue(fields()[57], other.pc04)) {
        this.pc04 = data().deepCopy(fields()[57].schema(), other.pc04);
        fieldSetFlags()[57] = true;
      }
      if (isValidValue(fields()[58], other.pc05)) {
        this.pc05 = data().deepCopy(fields()[58].schema(), other.pc05);
        fieldSetFlags()[58] = true;
      }
      if (isValidValue(fields()[59], other.pc06)) {
        this.pc06 = data().deepCopy(fields()[59].schema(), other.pc06);
        fieldSetFlags()[59] = true;
      }
      if (isValidValue(fields()[60], other.pc19)) {
        this.pc19 = data().deepCopy(fields()[60].schema(), other.pc19);
        fieldSetFlags()[60] = true;
      }
      if (isValidValue(fields()[61], other.pc20)) {
        this.pc20 = data().deepCopy(fields()[61].schema(), other.pc20);
        fieldSetFlags()[61] = true;
      }
      if (isValidValue(fields()[62], other.pc21)) {
        this.pc21 = data().deepCopy(fields()[62].schema(), other.pc21);
        fieldSetFlags()[62] = true;
      }
      if (isValidValue(fields()[63], other.pc22)) {
        this.pc22 = data().deepCopy(fields()[63].schema(), other.pc22);
        fieldSetFlags()[63] = true;
      }
      if (isValidValue(fields()[64], other.pc23)) {
        this.pc23 = data().deepCopy(fields()[64].schema(), other.pc23);
        fieldSetFlags()[64] = true;
      }
      if (isValidValue(fields()[65], other.pc24)) {
        this.pc24 = data().deepCopy(fields()[65].schema(), other.pc24);
        fieldSetFlags()[65] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing Debs2012DataPoint instance
     * @param other The existing instance to copy.
     */
    private Builder(com.debs2012.Debs2012DataPoint other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.ts)) {
        this.ts = data().deepCopy(fields()[0].schema(), other.ts);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.index)) {
        this.index = data().deepCopy(fields()[1].schema(), other.index);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.mf01)) {
        this.mf01 = data().deepCopy(fields()[2].schema(), other.mf01);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.mf02)) {
        this.mf02 = data().deepCopy(fields()[3].schema(), other.mf02);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.mf03)) {
        this.mf03 = data().deepCopy(fields()[4].schema(), other.mf03);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.pc13)) {
        this.pc13 = data().deepCopy(fields()[5].schema(), other.pc13);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.pc14)) {
        this.pc14 = data().deepCopy(fields()[6].schema(), other.pc14);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.pc15)) {
        this.pc15 = data().deepCopy(fields()[7].schema(), other.pc15);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.pc25)) {
        this.pc25 = data().deepCopy(fields()[8].schema(), other.pc25);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.pc26)) {
        this.pc26 = data().deepCopy(fields()[9].schema(), other.pc26);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.pc27)) {
        this.pc27 = data().deepCopy(fields()[10].schema(), other.pc27);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.res)) {
        this.res = data().deepCopy(fields()[11].schema(), other.res);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.bm05)) {
        this.bm05 = data().deepCopy(fields()[12].schema(), other.bm05);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.bm06)) {
        this.bm06 = data().deepCopy(fields()[13].schema(), other.bm06);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.bm07)) {
        this.bm07 = data().deepCopy(fields()[14].schema(), other.bm07);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.bm08)) {
        this.bm08 = data().deepCopy(fields()[15].schema(), other.bm08);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.bm09)) {
        this.bm09 = data().deepCopy(fields()[16].schema(), other.bm09);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.bm10)) {
        this.bm10 = data().deepCopy(fields()[17].schema(), other.bm10);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.pp01)) {
        this.pp01 = data().deepCopy(fields()[18].schema(), other.pp01);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.pp02)) {
        this.pp02 = data().deepCopy(fields()[19].schema(), other.pp02);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.pp03)) {
        this.pp03 = data().deepCopy(fields()[20].schema(), other.pp03);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.pp04)) {
        this.pp04 = data().deepCopy(fields()[21].schema(), other.pp04);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.pp05)) {
        this.pp05 = data().deepCopy(fields()[22].schema(), other.pp05);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.pp06)) {
        this.pp06 = data().deepCopy(fields()[23].schema(), other.pp06);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.pp07)) {
        this.pp07 = data().deepCopy(fields()[24].schema(), other.pp07);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.pp08)) {
        this.pp08 = data().deepCopy(fields()[25].schema(), other.pp08);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.pp09)) {
        this.pp09 = data().deepCopy(fields()[26].schema(), other.pp09);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.pp10)) {
        this.pp10 = data().deepCopy(fields()[27].schema(), other.pp10);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.pp11)) {
        this.pp11 = data().deepCopy(fields()[28].schema(), other.pp11);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.pp12)) {
        this.pp12 = data().deepCopy(fields()[29].schema(), other.pp12);
        fieldSetFlags()[29] = true;
      }
      if (isValidValue(fields()[30], other.pp13)) {
        this.pp13 = data().deepCopy(fields()[30].schema(), other.pp13);
        fieldSetFlags()[30] = true;
      }
      if (isValidValue(fields()[31], other.pp14)) {
        this.pp14 = data().deepCopy(fields()[31].schema(), other.pp14);
        fieldSetFlags()[31] = true;
      }
      if (isValidValue(fields()[32], other.pp15)) {
        this.pp15 = data().deepCopy(fields()[32].schema(), other.pp15);
        fieldSetFlags()[32] = true;
      }
      if (isValidValue(fields()[33], other.pp16)) {
        this.pp16 = data().deepCopy(fields()[33].schema(), other.pp16);
        fieldSetFlags()[33] = true;
      }
      if (isValidValue(fields()[34], other.pp17)) {
        this.pp17 = data().deepCopy(fields()[34].schema(), other.pp17);
        fieldSetFlags()[34] = true;
      }
      if (isValidValue(fields()[35], other.pp18)) {
        this.pp18 = data().deepCopy(fields()[35].schema(), other.pp18);
        fieldSetFlags()[35] = true;
      }
      if (isValidValue(fields()[36], other.pp19)) {
        this.pp19 = data().deepCopy(fields()[36].schema(), other.pp19);
        fieldSetFlags()[36] = true;
      }
      if (isValidValue(fields()[37], other.pp20)) {
        this.pp20 = data().deepCopy(fields()[37].schema(), other.pp20);
        fieldSetFlags()[37] = true;
      }
      if (isValidValue(fields()[38], other.pp21)) {
        this.pp21 = data().deepCopy(fields()[38].schema(), other.pp21);
        fieldSetFlags()[38] = true;
      }
      if (isValidValue(fields()[39], other.pp22)) {
        this.pp22 = data().deepCopy(fields()[39].schema(), other.pp22);
        fieldSetFlags()[39] = true;
      }
      if (isValidValue(fields()[40], other.pp23)) {
        this.pp23 = data().deepCopy(fields()[40].schema(), other.pp23);
        fieldSetFlags()[40] = true;
      }
      if (isValidValue(fields()[41], other.pp24)) {
        this.pp24 = data().deepCopy(fields()[41].schema(), other.pp24);
        fieldSetFlags()[41] = true;
      }
      if (isValidValue(fields()[42], other.pp25)) {
        this.pp25 = data().deepCopy(fields()[42].schema(), other.pp25);
        fieldSetFlags()[42] = true;
      }
      if (isValidValue(fields()[43], other.pp26)) {
        this.pp26 = data().deepCopy(fields()[43].schema(), other.pp26);
        fieldSetFlags()[43] = true;
      }
      if (isValidValue(fields()[44], other.pp27)) {
        this.pp27 = data().deepCopy(fields()[44].schema(), other.pp27);
        fieldSetFlags()[44] = true;
      }
      if (isValidValue(fields()[45], other.pp28)) {
        this.pp28 = data().deepCopy(fields()[45].schema(), other.pp28);
        fieldSetFlags()[45] = true;
      }
      if (isValidValue(fields()[46], other.pp29)) {
        this.pp29 = data().deepCopy(fields()[46].schema(), other.pp29);
        fieldSetFlags()[46] = true;
      }
      if (isValidValue(fields()[47], other.pp30)) {
        this.pp30 = data().deepCopy(fields()[47].schema(), other.pp30);
        fieldSetFlags()[47] = true;
      }
      if (isValidValue(fields()[48], other.pp31)) {
        this.pp31 = data().deepCopy(fields()[48].schema(), other.pp31);
        fieldSetFlags()[48] = true;
      }
      if (isValidValue(fields()[49], other.pp32)) {
        this.pp32 = data().deepCopy(fields()[49].schema(), other.pp32);
        fieldSetFlags()[49] = true;
      }
      if (isValidValue(fields()[50], other.pp33)) {
        this.pp33 = data().deepCopy(fields()[50].schema(), other.pp33);
        fieldSetFlags()[50] = true;
      }
      if (isValidValue(fields()[51], other.pp34)) {
        this.pp34 = data().deepCopy(fields()[51].schema(), other.pp34);
        fieldSetFlags()[51] = true;
      }
      if (isValidValue(fields()[52], other.pp35)) {
        this.pp35 = data().deepCopy(fields()[52].schema(), other.pp35);
        fieldSetFlags()[52] = true;
      }
      if (isValidValue(fields()[53], other.pp36)) {
        this.pp36 = data().deepCopy(fields()[53].schema(), other.pp36);
        fieldSetFlags()[53] = true;
      }
      if (isValidValue(fields()[54], other.pc01)) {
        this.pc01 = data().deepCopy(fields()[54].schema(), other.pc01);
        fieldSetFlags()[54] = true;
      }
      if (isValidValue(fields()[55], other.pc02)) {
        this.pc02 = data().deepCopy(fields()[55].schema(), other.pc02);
        fieldSetFlags()[55] = true;
      }
      if (isValidValue(fields()[56], other.pc03)) {
        this.pc03 = data().deepCopy(fields()[56].schema(), other.pc03);
        fieldSetFlags()[56] = true;
      }
      if (isValidValue(fields()[57], other.pc04)) {
        this.pc04 = data().deepCopy(fields()[57].schema(), other.pc04);
        fieldSetFlags()[57] = true;
      }
      if (isValidValue(fields()[58], other.pc05)) {
        this.pc05 = data().deepCopy(fields()[58].schema(), other.pc05);
        fieldSetFlags()[58] = true;
      }
      if (isValidValue(fields()[59], other.pc06)) {
        this.pc06 = data().deepCopy(fields()[59].schema(), other.pc06);
        fieldSetFlags()[59] = true;
      }
      if (isValidValue(fields()[60], other.pc19)) {
        this.pc19 = data().deepCopy(fields()[60].schema(), other.pc19);
        fieldSetFlags()[60] = true;
      }
      if (isValidValue(fields()[61], other.pc20)) {
        this.pc20 = data().deepCopy(fields()[61].schema(), other.pc20);
        fieldSetFlags()[61] = true;
      }
      if (isValidValue(fields()[62], other.pc21)) {
        this.pc21 = data().deepCopy(fields()[62].schema(), other.pc21);
        fieldSetFlags()[62] = true;
      }
      if (isValidValue(fields()[63], other.pc22)) {
        this.pc22 = data().deepCopy(fields()[63].schema(), other.pc22);
        fieldSetFlags()[63] = true;
      }
      if (isValidValue(fields()[64], other.pc23)) {
        this.pc23 = data().deepCopy(fields()[64].schema(), other.pc23);
        fieldSetFlags()[64] = true;
      }
      if (isValidValue(fields()[65], other.pc24)) {
        this.pc24 = data().deepCopy(fields()[65].schema(), other.pc24);
        fieldSetFlags()[65] = true;
      }
    }

    /**
      * Gets the value of the 'ts' field.
      * EPOCH millis Timestamp 
      * @return The value.
      */
    public java.lang.Long getTs() {
      return ts;
    }

    /**
      * Sets the value of the 'ts' field.
      * EPOCH millis Timestamp 
      * @param value The value of 'ts'.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder setTs(long value) {
      validate(fields()[0], value);
      this.ts = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'ts' field has been set.
      * EPOCH millis Timestamp 
      * @return True if the 'ts' field has been set, false otherwise.
      */
    public boolean hasTs() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'ts' field.
      * EPOCH millis Timestamp 
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder clearTs() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'index' field.
      * message index
      * @return The value.
      */
    public java.lang.Long getIndex() {
      return index;
    }

    /**
      * Sets the value of the 'index' field.
      * message index
      * @param value The value of 'index'.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder setIndex(long value) {
      validate(fields()[1], value);
      this.index = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'index' field has been set.
      * message index
      * @return True if the 'index' field has been set, false otherwise.
      */
    public boolean hasIndex() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'index' field.
      * message index
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder clearIndex() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'mf01' field.
      * Electrical Power Main Phase 1
      * @return The value.
      */
    public java.lang.Integer getMf01() {
      return mf01;
    }

    /**
      * Sets the value of the 'mf01' field.
      * Electrical Power Main Phase 1
      * @param value The value of 'mf01'.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder setMf01(java.lang.Integer value) {
      validate(fields()[2], value);
      this.mf01 = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'mf01' field has been set.
      * Electrical Power Main Phase 1
      * @return True if the 'mf01' field has been set, false otherwise.
      */
    public boolean hasMf01() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'mf01' field.
      * Electrical Power Main Phase 1
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder clearMf01() {
      mf01 = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'mf02' field.
      * Electrical Power Main Phase 2
      * @return The value.
      */
    public java.lang.Integer getMf02() {
      return mf02;
    }

    /**
      * Sets the value of the 'mf02' field.
      * Electrical Power Main Phase 2
      * @param value The value of 'mf02'.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder setMf02(java.lang.Integer value) {
      validate(fields()[3], value);
      this.mf02 = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'mf02' field has been set.
      * Electrical Power Main Phase 2
      * @return True if the 'mf02' field has been set, false otherwise.
      */
    public boolean hasMf02() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'mf02' field.
      * Electrical Power Main Phase 2
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder clearMf02() {
      mf02 = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'mf03' field.
      * Electrical Power Main Phase 3
      * @return The value.
      */
    public java.lang.Integer getMf03() {
      return mf03;
    }

    /**
      * Sets the value of the 'mf03' field.
      * Electrical Power Main Phase 3
      * @param value The value of 'mf03'.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder setMf03(java.lang.Integer value) {
      validate(fields()[4], value);
      this.mf03 = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'mf03' field has been set.
      * Electrical Power Main Phase 3
      * @return True if the 'mf03' field has been set, false otherwise.
      */
    public boolean hasMf03() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'mf03' field.
      * Electrical Power Main Phase 3
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder clearMf03() {
      mf03 = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'pc13' field.
      * Anode Current Drop Detection Cell 1
      * @return The value.
      */
    public java.lang.Integer getPc13() {
      return pc13;
    }

    /**
      * Sets the value of the 'pc13' field.
      * Anode Current Drop Detection Cell 1
      * @param value The value of 'pc13'.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder setPc13(java.lang.Integer value) {
      validate(fields()[5], value);
      this.pc13 = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'pc13' field has been set.
      * Anode Current Drop Detection Cell 1
      * @return True if the 'pc13' field has been set, false otherwise.
      */
    public boolean hasPc13() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'pc13' field.
      * Anode Current Drop Detection Cell 1
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder clearPc13() {
      pc13 = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'pc14' field.
      * Anode Current Drop Detection Cell 2
      * @return The value.
      */
    public java.lang.Integer getPc14() {
      return pc14;
    }

    /**
      * Sets the value of the 'pc14' field.
      * Anode Current Drop Detection Cell 2
      * @param value The value of 'pc14'.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder setPc14(java.lang.Integer value) {
      validate(fields()[6], value);
      this.pc14 = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'pc14' field has been set.
      * Anode Current Drop Detection Cell 2
      * @return True if the 'pc14' field has been set, false otherwise.
      */
    public boolean hasPc14() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'pc14' field.
      * Anode Current Drop Detection Cell 2
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder clearPc14() {
      pc14 = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'pc15' field.
      * Anode Current Drop Detection Cell 3
      * @return The value.
      */
    public java.lang.Integer getPc15() {
      return pc15;
    }

    /**
      * Sets the value of the 'pc15' field.
      * Anode Current Drop Detection Cell 3
      * @param value The value of 'pc15'.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder setPc15(java.lang.Integer value) {
      validate(fields()[7], value);
      this.pc15 = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'pc15' field has been set.
      * Anode Current Drop Detection Cell 3
      * @return True if the 'pc15' field has been set, false otherwise.
      */
    public boolean hasPc15() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'pc15' field.
      * Anode Current Drop Detection Cell 3
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder clearPc15() {
      pc15 = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'pc25' field.
      * Anode Voltage Drop Detection Cell 1
      * @return The value.
      */
    public java.lang.Integer getPc25() {
      return pc25;
    }

    /**
      * Sets the value of the 'pc25' field.
      * Anode Voltage Drop Detection Cell 1
      * @param value The value of 'pc25'.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder setPc25(java.lang.Integer value) {
      validate(fields()[8], value);
      this.pc25 = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'pc25' field has been set.
      * Anode Voltage Drop Detection Cell 1
      * @return True if the 'pc25' field has been set, false otherwise.
      */
    public boolean hasPc25() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'pc25' field.
      * Anode Voltage Drop Detection Cell 1
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder clearPc25() {
      pc25 = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'pc26' field.
      * Anode Voltage Drop Detection Cell 2
      * @return The value.
      */
    public java.lang.Integer getPc26() {
      return pc26;
    }

    /**
      * Sets the value of the 'pc26' field.
      * Anode Voltage Drop Detection Cell 2
      * @param value The value of 'pc26'.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder setPc26(java.lang.Integer value) {
      validate(fields()[9], value);
      this.pc26 = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'pc26' field has been set.
      * Anode Voltage Drop Detection Cell 2
      * @return True if the 'pc26' field has been set, false otherwise.
      */
    public boolean hasPc26() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'pc26' field.
      * Anode Voltage Drop Detection Cell 2
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder clearPc26() {
      pc26 = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'pc27' field.
      * Anode Voltage Drop Detection Cell 3
      * @return The value.
      */
    public java.lang.Integer getPc27() {
      return pc27;
    }

    /**
      * Sets the value of the 'pc27' field.
      * Anode Voltage Drop Detection Cell 3
      * @param value The value of 'pc27'.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder setPc27(java.lang.Integer value) {
      validate(fields()[10], value);
      this.pc27 = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'pc27' field has been set.
      * Anode Voltage Drop Detection Cell 3
      * @return True if the 'pc27' field has been set, false otherwise.
      */
    public boolean hasPc27() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'pc27' field.
      * Anode Voltage Drop Detection Cell 3
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder clearPc27() {
      pc27 = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'res' field.
      * @return The value.
      */
    public java.lang.Integer getRes() {
      return res;
    }

    /**
      * Sets the value of the 'res' field.
      * @param value The value of 'res'.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder setRes(java.lang.Integer value) {
      validate(fields()[11], value);
      this.res = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'res' field has been set.
      * @return True if the 'res' field has been set, false otherwise.
      */
    public boolean hasRes() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'res' field.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder clearRes() {
      res = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'bm05' field.
      * Chem A Additive Sense 
      * @return The value.
      */
    public java.lang.Boolean getBm05() {
      return bm05;
    }

    /**
      * Sets the value of the 'bm05' field.
      * Chem A Additive Sense 
      * @param value The value of 'bm05'.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder setBm05(java.lang.Boolean value) {
      validate(fields()[12], value);
      this.bm05 = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'bm05' field has been set.
      * Chem A Additive Sense 
      * @return True if the 'bm05' field has been set, false otherwise.
      */
    public boolean hasBm05() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'bm05' field.
      * Chem A Additive Sense 
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder clearBm05() {
      bm05 = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'bm06' field.
      * Chem B Additive Sense 
      * @return The value.
      */
    public java.lang.Boolean getBm06() {
      return bm06;
    }

    /**
      * Sets the value of the 'bm06' field.
      * Chem B Additive Sense 
      * @param value The value of 'bm06'.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder setBm06(java.lang.Boolean value) {
      validate(fields()[13], value);
      this.bm06 = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'bm06' field has been set.
      * Chem B Additive Sense 
      * @return True if the 'bm06' field has been set, false otherwise.
      */
    public boolean hasBm06() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'bm06' field.
      * Chem B Additive Sense 
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder clearBm06() {
      bm06 = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'bm07' field.
      * Chem C Additive Sense 
      * @return The value.
      */
    public java.lang.Boolean getBm07() {
      return bm07;
    }

    /**
      * Sets the value of the 'bm07' field.
      * Chem C Additive Sense 
      * @param value The value of 'bm07'.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder setBm07(java.lang.Boolean value) {
      validate(fields()[14], value);
      this.bm07 = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'bm07' field has been set.
      * Chem C Additive Sense 
      * @return True if the 'bm07' field has been set, false otherwise.
      */
    public boolean hasBm07() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'bm07' field.
      * Chem C Additive Sense 
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder clearBm07() {
      bm07 = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'bm08' field.
      * Chem A Additive Release Valve VL26 
      * @return The value.
      */
    public java.lang.Boolean getBm08() {
      return bm08;
    }

    /**
      * Sets the value of the 'bm08' field.
      * Chem A Additive Release Valve VL26 
      * @param value The value of 'bm08'.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder setBm08(java.lang.Boolean value) {
      validate(fields()[15], value);
      this.bm08 = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'bm08' field has been set.
      * Chem A Additive Release Valve VL26 
      * @return True if the 'bm08' field has been set, false otherwise.
      */
    public boolean hasBm08() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'bm08' field.
      * Chem A Additive Release Valve VL26 
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder clearBm08() {
      bm08 = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'bm09' field.
      * Chem B Additive Release Valve VL27 
      * @return The value.
      */
    public java.lang.Boolean getBm09() {
      return bm09;
    }

    /**
      * Sets the value of the 'bm09' field.
      * Chem B Additive Release Valve VL27 
      * @param value The value of 'bm09'.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder setBm09(java.lang.Boolean value) {
      validate(fields()[16], value);
      this.bm09 = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'bm09' field has been set.
      * Chem B Additive Release Valve VL27 
      * @return True if the 'bm09' field has been set, false otherwise.
      */
    public boolean hasBm09() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'bm09' field.
      * Chem B Additive Release Valve VL27 
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder clearBm09() {
      bm09 = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'bm10' field.
      * Chem C Additive Release Valve VL28 
      * @return The value.
      */
    public java.lang.Boolean getBm10() {
      return bm10;
    }

    /**
      * Sets the value of the 'bm10' field.
      * Chem C Additive Release Valve VL28 
      * @param value The value of 'bm10'.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder setBm10(java.lang.Boolean value) {
      validate(fields()[17], value);
      this.bm10 = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'bm10' field has been set.
      * Chem C Additive Release Valve VL28 
      * @return True if the 'bm10' field has been set, false otherwise.
      */
    public boolean hasBm10() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'bm10' field.
      * Chem C Additive Release Valve VL28 
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder clearBm10() {
      bm10 = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'pp01' field.
      * @return The value.
      */
    public java.lang.Boolean getPp01() {
      return pp01;
    }

    /**
      * Sets the value of the 'pp01' field.
      * @param value The value of 'pp01'.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder setPp01(java.lang.Boolean value) {
      validate(fields()[18], value);
      this.pp01 = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'pp01' field has been set.
      * @return True if the 'pp01' field has been set, false otherwise.
      */
    public boolean hasPp01() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'pp01' field.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder clearPp01() {
      pp01 = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'pp02' field.
      * @return The value.
      */
    public java.lang.Boolean getPp02() {
      return pp02;
    }

    /**
      * Sets the value of the 'pp02' field.
      * @param value The value of 'pp02'.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder setPp02(java.lang.Boolean value) {
      validate(fields()[19], value);
      this.pp02 = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'pp02' field has been set.
      * @return True if the 'pp02' field has been set, false otherwise.
      */
    public boolean hasPp02() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'pp02' field.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder clearPp02() {
      pp02 = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'pp03' field.
      * @return The value.
      */
    public java.lang.Boolean getPp03() {
      return pp03;
    }

    /**
      * Sets the value of the 'pp03' field.
      * @param value The value of 'pp03'.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder setPp03(java.lang.Boolean value) {
      validate(fields()[20], value);
      this.pp03 = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
      * Checks whether the 'pp03' field has been set.
      * @return True if the 'pp03' field has been set, false otherwise.
      */
    public boolean hasPp03() {
      return fieldSetFlags()[20];
    }


    /**
      * Clears the value of the 'pp03' field.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder clearPp03() {
      pp03 = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    /**
      * Gets the value of the 'pp04' field.
      * @return The value.
      */
    public java.lang.Boolean getPp04() {
      return pp04;
    }

    /**
      * Sets the value of the 'pp04' field.
      * @param value The value of 'pp04'.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder setPp04(java.lang.Boolean value) {
      validate(fields()[21], value);
      this.pp04 = value;
      fieldSetFlags()[21] = true;
      return this;
    }

    /**
      * Checks whether the 'pp04' field has been set.
      * @return True if the 'pp04' field has been set, false otherwise.
      */
    public boolean hasPp04() {
      return fieldSetFlags()[21];
    }


    /**
      * Clears the value of the 'pp04' field.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder clearPp04() {
      pp04 = null;
      fieldSetFlags()[21] = false;
      return this;
    }

    /**
      * Gets the value of the 'pp05' field.
      * @return The value.
      */
    public java.lang.Boolean getPp05() {
      return pp05;
    }

    /**
      * Sets the value of the 'pp05' field.
      * @param value The value of 'pp05'.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder setPp05(java.lang.Boolean value) {
      validate(fields()[22], value);
      this.pp05 = value;
      fieldSetFlags()[22] = true;
      return this;
    }

    /**
      * Checks whether the 'pp05' field has been set.
      * @return True if the 'pp05' field has been set, false otherwise.
      */
    public boolean hasPp05() {
      return fieldSetFlags()[22];
    }


    /**
      * Clears the value of the 'pp05' field.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder clearPp05() {
      pp05 = null;
      fieldSetFlags()[22] = false;
      return this;
    }

    /**
      * Gets the value of the 'pp06' field.
      * @return The value.
      */
    public java.lang.Boolean getPp06() {
      return pp06;
    }

    /**
      * Sets the value of the 'pp06' field.
      * @param value The value of 'pp06'.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder setPp06(java.lang.Boolean value) {
      validate(fields()[23], value);
      this.pp06 = value;
      fieldSetFlags()[23] = true;
      return this;
    }

    /**
      * Checks whether the 'pp06' field has been set.
      * @return True if the 'pp06' field has been set, false otherwise.
      */
    public boolean hasPp06() {
      return fieldSetFlags()[23];
    }


    /**
      * Clears the value of the 'pp06' field.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder clearPp06() {
      pp06 = null;
      fieldSetFlags()[23] = false;
      return this;
    }

    /**
      * Gets the value of the 'pp07' field.
      * @return The value.
      */
    public java.lang.Boolean getPp07() {
      return pp07;
    }

    /**
      * Sets the value of the 'pp07' field.
      * @param value The value of 'pp07'.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder setPp07(java.lang.Boolean value) {
      validate(fields()[24], value);
      this.pp07 = value;
      fieldSetFlags()[24] = true;
      return this;
    }

    /**
      * Checks whether the 'pp07' field has been set.
      * @return True if the 'pp07' field has been set, false otherwise.
      */
    public boolean hasPp07() {
      return fieldSetFlags()[24];
    }


    /**
      * Clears the value of the 'pp07' field.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder clearPp07() {
      pp07 = null;
      fieldSetFlags()[24] = false;
      return this;
    }

    /**
      * Gets the value of the 'pp08' field.
      * @return The value.
      */
    public java.lang.Boolean getPp08() {
      return pp08;
    }

    /**
      * Sets the value of the 'pp08' field.
      * @param value The value of 'pp08'.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder setPp08(java.lang.Boolean value) {
      validate(fields()[25], value);
      this.pp08 = value;
      fieldSetFlags()[25] = true;
      return this;
    }

    /**
      * Checks whether the 'pp08' field has been set.
      * @return True if the 'pp08' field has been set, false otherwise.
      */
    public boolean hasPp08() {
      return fieldSetFlags()[25];
    }


    /**
      * Clears the value of the 'pp08' field.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder clearPp08() {
      pp08 = null;
      fieldSetFlags()[25] = false;
      return this;
    }

    /**
      * Gets the value of the 'pp09' field.
      * @return The value.
      */
    public java.lang.Boolean getPp09() {
      return pp09;
    }

    /**
      * Sets the value of the 'pp09' field.
      * @param value The value of 'pp09'.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder setPp09(java.lang.Boolean value) {
      validate(fields()[26], value);
      this.pp09 = value;
      fieldSetFlags()[26] = true;
      return this;
    }

    /**
      * Checks whether the 'pp09' field has been set.
      * @return True if the 'pp09' field has been set, false otherwise.
      */
    public boolean hasPp09() {
      return fieldSetFlags()[26];
    }


    /**
      * Clears the value of the 'pp09' field.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder clearPp09() {
      pp09 = null;
      fieldSetFlags()[26] = false;
      return this;
    }

    /**
      * Gets the value of the 'pp10' field.
      * @return The value.
      */
    public java.lang.Boolean getPp10() {
      return pp10;
    }

    /**
      * Sets the value of the 'pp10' field.
      * @param value The value of 'pp10'.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder setPp10(java.lang.Boolean value) {
      validate(fields()[27], value);
      this.pp10 = value;
      fieldSetFlags()[27] = true;
      return this;
    }

    /**
      * Checks whether the 'pp10' field has been set.
      * @return True if the 'pp10' field has been set, false otherwise.
      */
    public boolean hasPp10() {
      return fieldSetFlags()[27];
    }


    /**
      * Clears the value of the 'pp10' field.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder clearPp10() {
      pp10 = null;
      fieldSetFlags()[27] = false;
      return this;
    }

    /**
      * Gets the value of the 'pp11' field.
      * @return The value.
      */
    public java.lang.Boolean getPp11() {
      return pp11;
    }

    /**
      * Sets the value of the 'pp11' field.
      * @param value The value of 'pp11'.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder setPp11(java.lang.Boolean value) {
      validate(fields()[28], value);
      this.pp11 = value;
      fieldSetFlags()[28] = true;
      return this;
    }

    /**
      * Checks whether the 'pp11' field has been set.
      * @return True if the 'pp11' field has been set, false otherwise.
      */
    public boolean hasPp11() {
      return fieldSetFlags()[28];
    }


    /**
      * Clears the value of the 'pp11' field.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder clearPp11() {
      pp11 = null;
      fieldSetFlags()[28] = false;
      return this;
    }

    /**
      * Gets the value of the 'pp12' field.
      * @return The value.
      */
    public java.lang.Boolean getPp12() {
      return pp12;
    }

    /**
      * Sets the value of the 'pp12' field.
      * @param value The value of 'pp12'.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder setPp12(java.lang.Boolean value) {
      validate(fields()[29], value);
      this.pp12 = value;
      fieldSetFlags()[29] = true;
      return this;
    }

    /**
      * Checks whether the 'pp12' field has been set.
      * @return True if the 'pp12' field has been set, false otherwise.
      */
    public boolean hasPp12() {
      return fieldSetFlags()[29];
    }


    /**
      * Clears the value of the 'pp12' field.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder clearPp12() {
      pp12 = null;
      fieldSetFlags()[29] = false;
      return this;
    }

    /**
      * Gets the value of the 'pp13' field.
      * @return The value.
      */
    public java.lang.Boolean getPp13() {
      return pp13;
    }

    /**
      * Sets the value of the 'pp13' field.
      * @param value The value of 'pp13'.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder setPp13(java.lang.Boolean value) {
      validate(fields()[30], value);
      this.pp13 = value;
      fieldSetFlags()[30] = true;
      return this;
    }

    /**
      * Checks whether the 'pp13' field has been set.
      * @return True if the 'pp13' field has been set, false otherwise.
      */
    public boolean hasPp13() {
      return fieldSetFlags()[30];
    }


    /**
      * Clears the value of the 'pp13' field.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder clearPp13() {
      pp13 = null;
      fieldSetFlags()[30] = false;
      return this;
    }

    /**
      * Gets the value of the 'pp14' field.
      * @return The value.
      */
    public java.lang.Boolean getPp14() {
      return pp14;
    }

    /**
      * Sets the value of the 'pp14' field.
      * @param value The value of 'pp14'.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder setPp14(java.lang.Boolean value) {
      validate(fields()[31], value);
      this.pp14 = value;
      fieldSetFlags()[31] = true;
      return this;
    }

    /**
      * Checks whether the 'pp14' field has been set.
      * @return True if the 'pp14' field has been set, false otherwise.
      */
    public boolean hasPp14() {
      return fieldSetFlags()[31];
    }


    /**
      * Clears the value of the 'pp14' field.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder clearPp14() {
      pp14 = null;
      fieldSetFlags()[31] = false;
      return this;
    }

    /**
      * Gets the value of the 'pp15' field.
      * @return The value.
      */
    public java.lang.Boolean getPp15() {
      return pp15;
    }

    /**
      * Sets the value of the 'pp15' field.
      * @param value The value of 'pp15'.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder setPp15(java.lang.Boolean value) {
      validate(fields()[32], value);
      this.pp15 = value;
      fieldSetFlags()[32] = true;
      return this;
    }

    /**
      * Checks whether the 'pp15' field has been set.
      * @return True if the 'pp15' field has been set, false otherwise.
      */
    public boolean hasPp15() {
      return fieldSetFlags()[32];
    }


    /**
      * Clears the value of the 'pp15' field.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder clearPp15() {
      pp15 = null;
      fieldSetFlags()[32] = false;
      return this;
    }

    /**
      * Gets the value of the 'pp16' field.
      * @return The value.
      */
    public java.lang.Boolean getPp16() {
      return pp16;
    }

    /**
      * Sets the value of the 'pp16' field.
      * @param value The value of 'pp16'.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder setPp16(java.lang.Boolean value) {
      validate(fields()[33], value);
      this.pp16 = value;
      fieldSetFlags()[33] = true;
      return this;
    }

    /**
      * Checks whether the 'pp16' field has been set.
      * @return True if the 'pp16' field has been set, false otherwise.
      */
    public boolean hasPp16() {
      return fieldSetFlags()[33];
    }


    /**
      * Clears the value of the 'pp16' field.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder clearPp16() {
      pp16 = null;
      fieldSetFlags()[33] = false;
      return this;
    }

    /**
      * Gets the value of the 'pp17' field.
      * @return The value.
      */
    public java.lang.Boolean getPp17() {
      return pp17;
    }

    /**
      * Sets the value of the 'pp17' field.
      * @param value The value of 'pp17'.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder setPp17(java.lang.Boolean value) {
      validate(fields()[34], value);
      this.pp17 = value;
      fieldSetFlags()[34] = true;
      return this;
    }

    /**
      * Checks whether the 'pp17' field has been set.
      * @return True if the 'pp17' field has been set, false otherwise.
      */
    public boolean hasPp17() {
      return fieldSetFlags()[34];
    }


    /**
      * Clears the value of the 'pp17' field.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder clearPp17() {
      pp17 = null;
      fieldSetFlags()[34] = false;
      return this;
    }

    /**
      * Gets the value of the 'pp18' field.
      * @return The value.
      */
    public java.lang.Boolean getPp18() {
      return pp18;
    }

    /**
      * Sets the value of the 'pp18' field.
      * @param value The value of 'pp18'.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder setPp18(java.lang.Boolean value) {
      validate(fields()[35], value);
      this.pp18 = value;
      fieldSetFlags()[35] = true;
      return this;
    }

    /**
      * Checks whether the 'pp18' field has been set.
      * @return True if the 'pp18' field has been set, false otherwise.
      */
    public boolean hasPp18() {
      return fieldSetFlags()[35];
    }


    /**
      * Clears the value of the 'pp18' field.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder clearPp18() {
      pp18 = null;
      fieldSetFlags()[35] = false;
      return this;
    }

    /**
      * Gets the value of the 'pp19' field.
      * @return The value.
      */
    public java.lang.Boolean getPp19() {
      return pp19;
    }

    /**
      * Sets the value of the 'pp19' field.
      * @param value The value of 'pp19'.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder setPp19(java.lang.Boolean value) {
      validate(fields()[36], value);
      this.pp19 = value;
      fieldSetFlags()[36] = true;
      return this;
    }

    /**
      * Checks whether the 'pp19' field has been set.
      * @return True if the 'pp19' field has been set, false otherwise.
      */
    public boolean hasPp19() {
      return fieldSetFlags()[36];
    }


    /**
      * Clears the value of the 'pp19' field.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder clearPp19() {
      pp19 = null;
      fieldSetFlags()[36] = false;
      return this;
    }

    /**
      * Gets the value of the 'pp20' field.
      * @return The value.
      */
    public java.lang.Boolean getPp20() {
      return pp20;
    }

    /**
      * Sets the value of the 'pp20' field.
      * @param value The value of 'pp20'.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder setPp20(java.lang.Boolean value) {
      validate(fields()[37], value);
      this.pp20 = value;
      fieldSetFlags()[37] = true;
      return this;
    }

    /**
      * Checks whether the 'pp20' field has been set.
      * @return True if the 'pp20' field has been set, false otherwise.
      */
    public boolean hasPp20() {
      return fieldSetFlags()[37];
    }


    /**
      * Clears the value of the 'pp20' field.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder clearPp20() {
      pp20 = null;
      fieldSetFlags()[37] = false;
      return this;
    }

    /**
      * Gets the value of the 'pp21' field.
      * @return The value.
      */
    public java.lang.Boolean getPp21() {
      return pp21;
    }

    /**
      * Sets the value of the 'pp21' field.
      * @param value The value of 'pp21'.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder setPp21(java.lang.Boolean value) {
      validate(fields()[38], value);
      this.pp21 = value;
      fieldSetFlags()[38] = true;
      return this;
    }

    /**
      * Checks whether the 'pp21' field has been set.
      * @return True if the 'pp21' field has been set, false otherwise.
      */
    public boolean hasPp21() {
      return fieldSetFlags()[38];
    }


    /**
      * Clears the value of the 'pp21' field.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder clearPp21() {
      pp21 = null;
      fieldSetFlags()[38] = false;
      return this;
    }

    /**
      * Gets the value of the 'pp22' field.
      * @return The value.
      */
    public java.lang.Boolean getPp22() {
      return pp22;
    }

    /**
      * Sets the value of the 'pp22' field.
      * @param value The value of 'pp22'.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder setPp22(java.lang.Boolean value) {
      validate(fields()[39], value);
      this.pp22 = value;
      fieldSetFlags()[39] = true;
      return this;
    }

    /**
      * Checks whether the 'pp22' field has been set.
      * @return True if the 'pp22' field has been set, false otherwise.
      */
    public boolean hasPp22() {
      return fieldSetFlags()[39];
    }


    /**
      * Clears the value of the 'pp22' field.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder clearPp22() {
      pp22 = null;
      fieldSetFlags()[39] = false;
      return this;
    }

    /**
      * Gets the value of the 'pp23' field.
      * @return The value.
      */
    public java.lang.Boolean getPp23() {
      return pp23;
    }

    /**
      * Sets the value of the 'pp23' field.
      * @param value The value of 'pp23'.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder setPp23(java.lang.Boolean value) {
      validate(fields()[40], value);
      this.pp23 = value;
      fieldSetFlags()[40] = true;
      return this;
    }

    /**
      * Checks whether the 'pp23' field has been set.
      * @return True if the 'pp23' field has been set, false otherwise.
      */
    public boolean hasPp23() {
      return fieldSetFlags()[40];
    }


    /**
      * Clears the value of the 'pp23' field.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder clearPp23() {
      pp23 = null;
      fieldSetFlags()[40] = false;
      return this;
    }

    /**
      * Gets the value of the 'pp24' field.
      * @return The value.
      */
    public java.lang.Boolean getPp24() {
      return pp24;
    }

    /**
      * Sets the value of the 'pp24' field.
      * @param value The value of 'pp24'.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder setPp24(java.lang.Boolean value) {
      validate(fields()[41], value);
      this.pp24 = value;
      fieldSetFlags()[41] = true;
      return this;
    }

    /**
      * Checks whether the 'pp24' field has been set.
      * @return True if the 'pp24' field has been set, false otherwise.
      */
    public boolean hasPp24() {
      return fieldSetFlags()[41];
    }


    /**
      * Clears the value of the 'pp24' field.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder clearPp24() {
      pp24 = null;
      fieldSetFlags()[41] = false;
      return this;
    }

    /**
      * Gets the value of the 'pp25' field.
      * @return The value.
      */
    public java.lang.Boolean getPp25() {
      return pp25;
    }

    /**
      * Sets the value of the 'pp25' field.
      * @param value The value of 'pp25'.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder setPp25(java.lang.Boolean value) {
      validate(fields()[42], value);
      this.pp25 = value;
      fieldSetFlags()[42] = true;
      return this;
    }

    /**
      * Checks whether the 'pp25' field has been set.
      * @return True if the 'pp25' field has been set, false otherwise.
      */
    public boolean hasPp25() {
      return fieldSetFlags()[42];
    }


    /**
      * Clears the value of the 'pp25' field.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder clearPp25() {
      pp25 = null;
      fieldSetFlags()[42] = false;
      return this;
    }

    /**
      * Gets the value of the 'pp26' field.
      * @return The value.
      */
    public java.lang.Boolean getPp26() {
      return pp26;
    }

    /**
      * Sets the value of the 'pp26' field.
      * @param value The value of 'pp26'.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder setPp26(java.lang.Boolean value) {
      validate(fields()[43], value);
      this.pp26 = value;
      fieldSetFlags()[43] = true;
      return this;
    }

    /**
      * Checks whether the 'pp26' field has been set.
      * @return True if the 'pp26' field has been set, false otherwise.
      */
    public boolean hasPp26() {
      return fieldSetFlags()[43];
    }


    /**
      * Clears the value of the 'pp26' field.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder clearPp26() {
      pp26 = null;
      fieldSetFlags()[43] = false;
      return this;
    }

    /**
      * Gets the value of the 'pp27' field.
      * @return The value.
      */
    public java.lang.Boolean getPp27() {
      return pp27;
    }

    /**
      * Sets the value of the 'pp27' field.
      * @param value The value of 'pp27'.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder setPp27(java.lang.Boolean value) {
      validate(fields()[44], value);
      this.pp27 = value;
      fieldSetFlags()[44] = true;
      return this;
    }

    /**
      * Checks whether the 'pp27' field has been set.
      * @return True if the 'pp27' field has been set, false otherwise.
      */
    public boolean hasPp27() {
      return fieldSetFlags()[44];
    }


    /**
      * Clears the value of the 'pp27' field.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder clearPp27() {
      pp27 = null;
      fieldSetFlags()[44] = false;
      return this;
    }

    /**
      * Gets the value of the 'pp28' field.
      * @return The value.
      */
    public java.lang.Boolean getPp28() {
      return pp28;
    }

    /**
      * Sets the value of the 'pp28' field.
      * @param value The value of 'pp28'.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder setPp28(java.lang.Boolean value) {
      validate(fields()[45], value);
      this.pp28 = value;
      fieldSetFlags()[45] = true;
      return this;
    }

    /**
      * Checks whether the 'pp28' field has been set.
      * @return True if the 'pp28' field has been set, false otherwise.
      */
    public boolean hasPp28() {
      return fieldSetFlags()[45];
    }


    /**
      * Clears the value of the 'pp28' field.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder clearPp28() {
      pp28 = null;
      fieldSetFlags()[45] = false;
      return this;
    }

    /**
      * Gets the value of the 'pp29' field.
      * @return The value.
      */
    public java.lang.Boolean getPp29() {
      return pp29;
    }

    /**
      * Sets the value of the 'pp29' field.
      * @param value The value of 'pp29'.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder setPp29(java.lang.Boolean value) {
      validate(fields()[46], value);
      this.pp29 = value;
      fieldSetFlags()[46] = true;
      return this;
    }

    /**
      * Checks whether the 'pp29' field has been set.
      * @return True if the 'pp29' field has been set, false otherwise.
      */
    public boolean hasPp29() {
      return fieldSetFlags()[46];
    }


    /**
      * Clears the value of the 'pp29' field.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder clearPp29() {
      pp29 = null;
      fieldSetFlags()[46] = false;
      return this;
    }

    /**
      * Gets the value of the 'pp30' field.
      * @return The value.
      */
    public java.lang.Boolean getPp30() {
      return pp30;
    }

    /**
      * Sets the value of the 'pp30' field.
      * @param value The value of 'pp30'.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder setPp30(java.lang.Boolean value) {
      validate(fields()[47], value);
      this.pp30 = value;
      fieldSetFlags()[47] = true;
      return this;
    }

    /**
      * Checks whether the 'pp30' field has been set.
      * @return True if the 'pp30' field has been set, false otherwise.
      */
    public boolean hasPp30() {
      return fieldSetFlags()[47];
    }


    /**
      * Clears the value of the 'pp30' field.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder clearPp30() {
      pp30 = null;
      fieldSetFlags()[47] = false;
      return this;
    }

    /**
      * Gets the value of the 'pp31' field.
      * @return The value.
      */
    public java.lang.Boolean getPp31() {
      return pp31;
    }

    /**
      * Sets the value of the 'pp31' field.
      * @param value The value of 'pp31'.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder setPp31(java.lang.Boolean value) {
      validate(fields()[48], value);
      this.pp31 = value;
      fieldSetFlags()[48] = true;
      return this;
    }

    /**
      * Checks whether the 'pp31' field has been set.
      * @return True if the 'pp31' field has been set, false otherwise.
      */
    public boolean hasPp31() {
      return fieldSetFlags()[48];
    }


    /**
      * Clears the value of the 'pp31' field.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder clearPp31() {
      pp31 = null;
      fieldSetFlags()[48] = false;
      return this;
    }

    /**
      * Gets the value of the 'pp32' field.
      * @return The value.
      */
    public java.lang.Boolean getPp32() {
      return pp32;
    }

    /**
      * Sets the value of the 'pp32' field.
      * @param value The value of 'pp32'.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder setPp32(java.lang.Boolean value) {
      validate(fields()[49], value);
      this.pp32 = value;
      fieldSetFlags()[49] = true;
      return this;
    }

    /**
      * Checks whether the 'pp32' field has been set.
      * @return True if the 'pp32' field has been set, false otherwise.
      */
    public boolean hasPp32() {
      return fieldSetFlags()[49];
    }


    /**
      * Clears the value of the 'pp32' field.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder clearPp32() {
      pp32 = null;
      fieldSetFlags()[49] = false;
      return this;
    }

    /**
      * Gets the value of the 'pp33' field.
      * @return The value.
      */
    public java.lang.Boolean getPp33() {
      return pp33;
    }

    /**
      * Sets the value of the 'pp33' field.
      * @param value The value of 'pp33'.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder setPp33(java.lang.Boolean value) {
      validate(fields()[50], value);
      this.pp33 = value;
      fieldSetFlags()[50] = true;
      return this;
    }

    /**
      * Checks whether the 'pp33' field has been set.
      * @return True if the 'pp33' field has been set, false otherwise.
      */
    public boolean hasPp33() {
      return fieldSetFlags()[50];
    }


    /**
      * Clears the value of the 'pp33' field.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder clearPp33() {
      pp33 = null;
      fieldSetFlags()[50] = false;
      return this;
    }

    /**
      * Gets the value of the 'pp34' field.
      * @return The value.
      */
    public java.lang.Boolean getPp34() {
      return pp34;
    }

    /**
      * Sets the value of the 'pp34' field.
      * @param value The value of 'pp34'.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder setPp34(java.lang.Boolean value) {
      validate(fields()[51], value);
      this.pp34 = value;
      fieldSetFlags()[51] = true;
      return this;
    }

    /**
      * Checks whether the 'pp34' field has been set.
      * @return True if the 'pp34' field has been set, false otherwise.
      */
    public boolean hasPp34() {
      return fieldSetFlags()[51];
    }


    /**
      * Clears the value of the 'pp34' field.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder clearPp34() {
      pp34 = null;
      fieldSetFlags()[51] = false;
      return this;
    }

    /**
      * Gets the value of the 'pp35' field.
      * @return The value.
      */
    public java.lang.Boolean getPp35() {
      return pp35;
    }

    /**
      * Sets the value of the 'pp35' field.
      * @param value The value of 'pp35'.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder setPp35(java.lang.Boolean value) {
      validate(fields()[52], value);
      this.pp35 = value;
      fieldSetFlags()[52] = true;
      return this;
    }

    /**
      * Checks whether the 'pp35' field has been set.
      * @return True if the 'pp35' field has been set, false otherwise.
      */
    public boolean hasPp35() {
      return fieldSetFlags()[52];
    }


    /**
      * Clears the value of the 'pp35' field.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder clearPp35() {
      pp35 = null;
      fieldSetFlags()[52] = false;
      return this;
    }

    /**
      * Gets the value of the 'pp36' field.
      * @return The value.
      */
    public java.lang.Boolean getPp36() {
      return pp36;
    }

    /**
      * Sets the value of the 'pp36' field.
      * @param value The value of 'pp36'.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder setPp36(java.lang.Boolean value) {
      validate(fields()[53], value);
      this.pp36 = value;
      fieldSetFlags()[53] = true;
      return this;
    }

    /**
      * Checks whether the 'pp36' field has been set.
      * @return True if the 'pp36' field has been set, false otherwise.
      */
    public boolean hasPp36() {
      return fieldSetFlags()[53];
    }


    /**
      * Clears the value of the 'pp36' field.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder clearPp36() {
      pp36 = null;
      fieldSetFlags()[53] = false;
      return this;
    }

    /**
      * Gets the value of the 'pc01' field.
      * @return The value.
      */
    public java.lang.Boolean getPc01() {
      return pc01;
    }

    /**
      * Sets the value of the 'pc01' field.
      * @param value The value of 'pc01'.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder setPc01(java.lang.Boolean value) {
      validate(fields()[54], value);
      this.pc01 = value;
      fieldSetFlags()[54] = true;
      return this;
    }

    /**
      * Checks whether the 'pc01' field has been set.
      * @return True if the 'pc01' field has been set, false otherwise.
      */
    public boolean hasPc01() {
      return fieldSetFlags()[54];
    }


    /**
      * Clears the value of the 'pc01' field.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder clearPc01() {
      pc01 = null;
      fieldSetFlags()[54] = false;
      return this;
    }

    /**
      * Gets the value of the 'pc02' field.
      * @return The value.
      */
    public java.lang.Boolean getPc02() {
      return pc02;
    }

    /**
      * Sets the value of the 'pc02' field.
      * @param value The value of 'pc02'.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder setPc02(java.lang.Boolean value) {
      validate(fields()[55], value);
      this.pc02 = value;
      fieldSetFlags()[55] = true;
      return this;
    }

    /**
      * Checks whether the 'pc02' field has been set.
      * @return True if the 'pc02' field has been set, false otherwise.
      */
    public boolean hasPc02() {
      return fieldSetFlags()[55];
    }


    /**
      * Clears the value of the 'pc02' field.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder clearPc02() {
      pc02 = null;
      fieldSetFlags()[55] = false;
      return this;
    }

    /**
      * Gets the value of the 'pc03' field.
      * @return The value.
      */
    public java.lang.Boolean getPc03() {
      return pc03;
    }

    /**
      * Sets the value of the 'pc03' field.
      * @param value The value of 'pc03'.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder setPc03(java.lang.Boolean value) {
      validate(fields()[56], value);
      this.pc03 = value;
      fieldSetFlags()[56] = true;
      return this;
    }

    /**
      * Checks whether the 'pc03' field has been set.
      * @return True if the 'pc03' field has been set, false otherwise.
      */
    public boolean hasPc03() {
      return fieldSetFlags()[56];
    }


    /**
      * Clears the value of the 'pc03' field.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder clearPc03() {
      pc03 = null;
      fieldSetFlags()[56] = false;
      return this;
    }

    /**
      * Gets the value of the 'pc04' field.
      * @return The value.
      */
    public java.lang.Boolean getPc04() {
      return pc04;
    }

    /**
      * Sets the value of the 'pc04' field.
      * @param value The value of 'pc04'.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder setPc04(java.lang.Boolean value) {
      validate(fields()[57], value);
      this.pc04 = value;
      fieldSetFlags()[57] = true;
      return this;
    }

    /**
      * Checks whether the 'pc04' field has been set.
      * @return True if the 'pc04' field has been set, false otherwise.
      */
    public boolean hasPc04() {
      return fieldSetFlags()[57];
    }


    /**
      * Clears the value of the 'pc04' field.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder clearPc04() {
      pc04 = null;
      fieldSetFlags()[57] = false;
      return this;
    }

    /**
      * Gets the value of the 'pc05' field.
      * @return The value.
      */
    public java.lang.Boolean getPc05() {
      return pc05;
    }

    /**
      * Sets the value of the 'pc05' field.
      * @param value The value of 'pc05'.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder setPc05(java.lang.Boolean value) {
      validate(fields()[58], value);
      this.pc05 = value;
      fieldSetFlags()[58] = true;
      return this;
    }

    /**
      * Checks whether the 'pc05' field has been set.
      * @return True if the 'pc05' field has been set, false otherwise.
      */
    public boolean hasPc05() {
      return fieldSetFlags()[58];
    }


    /**
      * Clears the value of the 'pc05' field.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder clearPc05() {
      pc05 = null;
      fieldSetFlags()[58] = false;
      return this;
    }

    /**
      * Gets the value of the 'pc06' field.
      * @return The value.
      */
    public java.lang.Boolean getPc06() {
      return pc06;
    }

    /**
      * Sets the value of the 'pc06' field.
      * @param value The value of 'pc06'.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder setPc06(java.lang.Boolean value) {
      validate(fields()[59], value);
      this.pc06 = value;
      fieldSetFlags()[59] = true;
      return this;
    }

    /**
      * Checks whether the 'pc06' field has been set.
      * @return True if the 'pc06' field has been set, false otherwise.
      */
    public boolean hasPc06() {
      return fieldSetFlags()[59];
    }


    /**
      * Clears the value of the 'pc06' field.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder clearPc06() {
      pc06 = null;
      fieldSetFlags()[59] = false;
      return this;
    }

    /**
      * Gets the value of the 'pc19' field.
      * @return The value.
      */
    public java.lang.Boolean getPc19() {
      return pc19;
    }

    /**
      * Sets the value of the 'pc19' field.
      * @param value The value of 'pc19'.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder setPc19(java.lang.Boolean value) {
      validate(fields()[60], value);
      this.pc19 = value;
      fieldSetFlags()[60] = true;
      return this;
    }

    /**
      * Checks whether the 'pc19' field has been set.
      * @return True if the 'pc19' field has been set, false otherwise.
      */
    public boolean hasPc19() {
      return fieldSetFlags()[60];
    }


    /**
      * Clears the value of the 'pc19' field.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder clearPc19() {
      pc19 = null;
      fieldSetFlags()[60] = false;
      return this;
    }

    /**
      * Gets the value of the 'pc20' field.
      * @return The value.
      */
    public java.lang.Boolean getPc20() {
      return pc20;
    }

    /**
      * Sets the value of the 'pc20' field.
      * @param value The value of 'pc20'.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder setPc20(java.lang.Boolean value) {
      validate(fields()[61], value);
      this.pc20 = value;
      fieldSetFlags()[61] = true;
      return this;
    }

    /**
      * Checks whether the 'pc20' field has been set.
      * @return True if the 'pc20' field has been set, false otherwise.
      */
    public boolean hasPc20() {
      return fieldSetFlags()[61];
    }


    /**
      * Clears the value of the 'pc20' field.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder clearPc20() {
      pc20 = null;
      fieldSetFlags()[61] = false;
      return this;
    }

    /**
      * Gets the value of the 'pc21' field.
      * @return The value.
      */
    public java.lang.Boolean getPc21() {
      return pc21;
    }

    /**
      * Sets the value of the 'pc21' field.
      * @param value The value of 'pc21'.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder setPc21(java.lang.Boolean value) {
      validate(fields()[62], value);
      this.pc21 = value;
      fieldSetFlags()[62] = true;
      return this;
    }

    /**
      * Checks whether the 'pc21' field has been set.
      * @return True if the 'pc21' field has been set, false otherwise.
      */
    public boolean hasPc21() {
      return fieldSetFlags()[62];
    }


    /**
      * Clears the value of the 'pc21' field.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder clearPc21() {
      pc21 = null;
      fieldSetFlags()[62] = false;
      return this;
    }

    /**
      * Gets the value of the 'pc22' field.
      * @return The value.
      */
    public java.lang.Boolean getPc22() {
      return pc22;
    }

    /**
      * Sets the value of the 'pc22' field.
      * @param value The value of 'pc22'.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder setPc22(java.lang.Boolean value) {
      validate(fields()[63], value);
      this.pc22 = value;
      fieldSetFlags()[63] = true;
      return this;
    }

    /**
      * Checks whether the 'pc22' field has been set.
      * @return True if the 'pc22' field has been set, false otherwise.
      */
    public boolean hasPc22() {
      return fieldSetFlags()[63];
    }


    /**
      * Clears the value of the 'pc22' field.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder clearPc22() {
      pc22 = null;
      fieldSetFlags()[63] = false;
      return this;
    }

    /**
      * Gets the value of the 'pc23' field.
      * @return The value.
      */
    public java.lang.Boolean getPc23() {
      return pc23;
    }

    /**
      * Sets the value of the 'pc23' field.
      * @param value The value of 'pc23'.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder setPc23(java.lang.Boolean value) {
      validate(fields()[64], value);
      this.pc23 = value;
      fieldSetFlags()[64] = true;
      return this;
    }

    /**
      * Checks whether the 'pc23' field has been set.
      * @return True if the 'pc23' field has been set, false otherwise.
      */
    public boolean hasPc23() {
      return fieldSetFlags()[64];
    }


    /**
      * Clears the value of the 'pc23' field.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder clearPc23() {
      pc23 = null;
      fieldSetFlags()[64] = false;
      return this;
    }

    /**
      * Gets the value of the 'pc24' field.
      * @return The value.
      */
    public java.lang.Boolean getPc24() {
      return pc24;
    }

    /**
      * Sets the value of the 'pc24' field.
      * @param value The value of 'pc24'.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder setPc24(java.lang.Boolean value) {
      validate(fields()[65], value);
      this.pc24 = value;
      fieldSetFlags()[65] = true;
      return this;
    }

    /**
      * Checks whether the 'pc24' field has been set.
      * @return True if the 'pc24' field has been set, false otherwise.
      */
    public boolean hasPc24() {
      return fieldSetFlags()[65];
    }


    /**
      * Clears the value of the 'pc24' field.
      * @return This builder.
      */
    public com.debs2012.Debs2012DataPoint.Builder clearPc24() {
      pc24 = null;
      fieldSetFlags()[65] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Debs2012DataPoint build() {
      try {
        Debs2012DataPoint record = new Debs2012DataPoint();
        record.ts = fieldSetFlags()[0] ? this.ts : (java.lang.Long) defaultValue(fields()[0]);
        record.index = fieldSetFlags()[1] ? this.index : (java.lang.Long) defaultValue(fields()[1]);
        record.mf01 = fieldSetFlags()[2] ? this.mf01 : (java.lang.Integer) defaultValue(fields()[2]);
        record.mf02 = fieldSetFlags()[3] ? this.mf02 : (java.lang.Integer) defaultValue(fields()[3]);
        record.mf03 = fieldSetFlags()[4] ? this.mf03 : (java.lang.Integer) defaultValue(fields()[4]);
        record.pc13 = fieldSetFlags()[5] ? this.pc13 : (java.lang.Integer) defaultValue(fields()[5]);
        record.pc14 = fieldSetFlags()[6] ? this.pc14 : (java.lang.Integer) defaultValue(fields()[6]);
        record.pc15 = fieldSetFlags()[7] ? this.pc15 : (java.lang.Integer) defaultValue(fields()[7]);
        record.pc25 = fieldSetFlags()[8] ? this.pc25 : (java.lang.Integer) defaultValue(fields()[8]);
        record.pc26 = fieldSetFlags()[9] ? this.pc26 : (java.lang.Integer) defaultValue(fields()[9]);
        record.pc27 = fieldSetFlags()[10] ? this.pc27 : (java.lang.Integer) defaultValue(fields()[10]);
        record.res = fieldSetFlags()[11] ? this.res : (java.lang.Integer) defaultValue(fields()[11]);
        record.bm05 = fieldSetFlags()[12] ? this.bm05 : (java.lang.Boolean) defaultValue(fields()[12]);
        record.bm06 = fieldSetFlags()[13] ? this.bm06 : (java.lang.Boolean) defaultValue(fields()[13]);
        record.bm07 = fieldSetFlags()[14] ? this.bm07 : (java.lang.Boolean) defaultValue(fields()[14]);
        record.bm08 = fieldSetFlags()[15] ? this.bm08 : (java.lang.Boolean) defaultValue(fields()[15]);
        record.bm09 = fieldSetFlags()[16] ? this.bm09 : (java.lang.Boolean) defaultValue(fields()[16]);
        record.bm10 = fieldSetFlags()[17] ? this.bm10 : (java.lang.Boolean) defaultValue(fields()[17]);
        record.pp01 = fieldSetFlags()[18] ? this.pp01 : (java.lang.Boolean) defaultValue(fields()[18]);
        record.pp02 = fieldSetFlags()[19] ? this.pp02 : (java.lang.Boolean) defaultValue(fields()[19]);
        record.pp03 = fieldSetFlags()[20] ? this.pp03 : (java.lang.Boolean) defaultValue(fields()[20]);
        record.pp04 = fieldSetFlags()[21] ? this.pp04 : (java.lang.Boolean) defaultValue(fields()[21]);
        record.pp05 = fieldSetFlags()[22] ? this.pp05 : (java.lang.Boolean) defaultValue(fields()[22]);
        record.pp06 = fieldSetFlags()[23] ? this.pp06 : (java.lang.Boolean) defaultValue(fields()[23]);
        record.pp07 = fieldSetFlags()[24] ? this.pp07 : (java.lang.Boolean) defaultValue(fields()[24]);
        record.pp08 = fieldSetFlags()[25] ? this.pp08 : (java.lang.Boolean) defaultValue(fields()[25]);
        record.pp09 = fieldSetFlags()[26] ? this.pp09 : (java.lang.Boolean) defaultValue(fields()[26]);
        record.pp10 = fieldSetFlags()[27] ? this.pp10 : (java.lang.Boolean) defaultValue(fields()[27]);
        record.pp11 = fieldSetFlags()[28] ? this.pp11 : (java.lang.Boolean) defaultValue(fields()[28]);
        record.pp12 = fieldSetFlags()[29] ? this.pp12 : (java.lang.Boolean) defaultValue(fields()[29]);
        record.pp13 = fieldSetFlags()[30] ? this.pp13 : (java.lang.Boolean) defaultValue(fields()[30]);
        record.pp14 = fieldSetFlags()[31] ? this.pp14 : (java.lang.Boolean) defaultValue(fields()[31]);
        record.pp15 = fieldSetFlags()[32] ? this.pp15 : (java.lang.Boolean) defaultValue(fields()[32]);
        record.pp16 = fieldSetFlags()[33] ? this.pp16 : (java.lang.Boolean) defaultValue(fields()[33]);
        record.pp17 = fieldSetFlags()[34] ? this.pp17 : (java.lang.Boolean) defaultValue(fields()[34]);
        record.pp18 = fieldSetFlags()[35] ? this.pp18 : (java.lang.Boolean) defaultValue(fields()[35]);
        record.pp19 = fieldSetFlags()[36] ? this.pp19 : (java.lang.Boolean) defaultValue(fields()[36]);
        record.pp20 = fieldSetFlags()[37] ? this.pp20 : (java.lang.Boolean) defaultValue(fields()[37]);
        record.pp21 = fieldSetFlags()[38] ? this.pp21 : (java.lang.Boolean) defaultValue(fields()[38]);
        record.pp22 = fieldSetFlags()[39] ? this.pp22 : (java.lang.Boolean) defaultValue(fields()[39]);
        record.pp23 = fieldSetFlags()[40] ? this.pp23 : (java.lang.Boolean) defaultValue(fields()[40]);
        record.pp24 = fieldSetFlags()[41] ? this.pp24 : (java.lang.Boolean) defaultValue(fields()[41]);
        record.pp25 = fieldSetFlags()[42] ? this.pp25 : (java.lang.Boolean) defaultValue(fields()[42]);
        record.pp26 = fieldSetFlags()[43] ? this.pp26 : (java.lang.Boolean) defaultValue(fields()[43]);
        record.pp27 = fieldSetFlags()[44] ? this.pp27 : (java.lang.Boolean) defaultValue(fields()[44]);
        record.pp28 = fieldSetFlags()[45] ? this.pp28 : (java.lang.Boolean) defaultValue(fields()[45]);
        record.pp29 = fieldSetFlags()[46] ? this.pp29 : (java.lang.Boolean) defaultValue(fields()[46]);
        record.pp30 = fieldSetFlags()[47] ? this.pp30 : (java.lang.Boolean) defaultValue(fields()[47]);
        record.pp31 = fieldSetFlags()[48] ? this.pp31 : (java.lang.Boolean) defaultValue(fields()[48]);
        record.pp32 = fieldSetFlags()[49] ? this.pp32 : (java.lang.Boolean) defaultValue(fields()[49]);
        record.pp33 = fieldSetFlags()[50] ? this.pp33 : (java.lang.Boolean) defaultValue(fields()[50]);
        record.pp34 = fieldSetFlags()[51] ? this.pp34 : (java.lang.Boolean) defaultValue(fields()[51]);
        record.pp35 = fieldSetFlags()[52] ? this.pp35 : (java.lang.Boolean) defaultValue(fields()[52]);
        record.pp36 = fieldSetFlags()[53] ? this.pp36 : (java.lang.Boolean) defaultValue(fields()[53]);
        record.pc01 = fieldSetFlags()[54] ? this.pc01 : (java.lang.Boolean) defaultValue(fields()[54]);
        record.pc02 = fieldSetFlags()[55] ? this.pc02 : (java.lang.Boolean) defaultValue(fields()[55]);
        record.pc03 = fieldSetFlags()[56] ? this.pc03 : (java.lang.Boolean) defaultValue(fields()[56]);
        record.pc04 = fieldSetFlags()[57] ? this.pc04 : (java.lang.Boolean) defaultValue(fields()[57]);
        record.pc05 = fieldSetFlags()[58] ? this.pc05 : (java.lang.Boolean) defaultValue(fields()[58]);
        record.pc06 = fieldSetFlags()[59] ? this.pc06 : (java.lang.Boolean) defaultValue(fields()[59]);
        record.pc19 = fieldSetFlags()[60] ? this.pc19 : (java.lang.Boolean) defaultValue(fields()[60]);
        record.pc20 = fieldSetFlags()[61] ? this.pc20 : (java.lang.Boolean) defaultValue(fields()[61]);
        record.pc21 = fieldSetFlags()[62] ? this.pc21 : (java.lang.Boolean) defaultValue(fields()[62]);
        record.pc22 = fieldSetFlags()[63] ? this.pc22 : (java.lang.Boolean) defaultValue(fields()[63]);
        record.pc23 = fieldSetFlags()[64] ? this.pc23 : (java.lang.Boolean) defaultValue(fields()[64]);
        record.pc24 = fieldSetFlags()[65] ? this.pc24 : (java.lang.Boolean) defaultValue(fields()[65]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Debs2012DataPoint>
    WRITER$ = (org.apache.avro.io.DatumWriter<Debs2012DataPoint>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Debs2012DataPoint>
    READER$ = (org.apache.avro.io.DatumReader<Debs2012DataPoint>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
